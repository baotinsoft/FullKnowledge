#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockKnowledge
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Stock")]
	public partial class KnowledgeDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDefinition(Definition instance);
    partial void UpdateDefinition(Definition instance);
    partial void DeleteDefinition(Definition instance);
    partial void InsertStock(Stock instance);
    partial void UpdateStock(Stock instance);
    partial void DeleteStock(Stock instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertDefinitionGroup(DefinitionGroup instance);
    partial void UpdateDefinitionGroup(DefinitionGroup instance);
    partial void DeleteDefinitionGroup(DefinitionGroup instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertPortfolio(Portfolio instance);
    partial void UpdatePortfolio(Portfolio instance);
    partial void DeletePortfolio(Portfolio instance);
    partial void InsertPrice(Price instance);
    partial void UpdatePrice(Price instance);
    partial void DeletePrice(Price instance);
    partial void InsertNew(New instance);
    partial void UpdateNew(New instance);
    partial void DeleteNew(New instance);
    #endregion
		
		public KnowledgeDBDataContext() : 
				base(global::StockKnowledge.Properties.Settings.Default.StockConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public KnowledgeDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KnowledgeDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KnowledgeDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public KnowledgeDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Definition> Definitions
		{
			get
			{
				return this.GetTable<Definition>();
			}
		}
		
		public System.Data.Linq.Table<Stock> Stocks
		{
			get
			{
				return this.GetTable<Stock>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<DefinitionGroup> DefinitionGroups
		{
			get
			{
				return this.GetTable<DefinitionGroup>();
			}
		}
		
		public System.Data.Linq.Table<vDefinition> vDefinitions
		{
			get
			{
				return this.GetTable<vDefinition>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<vPortfolio> vPortfolios
		{
			get
			{
				return this.GetTable<vPortfolio>();
			}
		}
		
		public System.Data.Linq.Table<Portfolio> Portfolios
		{
			get
			{
				return this.GetTable<Portfolio>();
			}
		}
		
		public System.Data.Linq.Table<Price> Prices
		{
			get
			{
				return this.GetTable<Price>();
			}
		}
		
		public System.Data.Linq.Table<vEvent> vEvents
		{
			get
			{
				return this.GetTable<vEvent>();
			}
		}
		
		public System.Data.Linq.Table<New> News
		{
			get
			{
				return this.GetTable<New>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Definition")]
	public partial class Definition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CodeNum;
		
		private string _Definition1;
		
		private System.Nullable<int> _DefGroupId;
		
		private string _Description;
		
		private System.Nullable<bool> _Bit;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _Num1;
		
		private System.Nullable<int> _Num2;
		
		private EntitySet<Stock> _Stocks;
		
		private EntityRef<DefinitionGroup> _DefinitionGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeNumChanging(string value);
    partial void OnCodeNumChanged();
    partial void OnDefinition1Changing(string value);
    partial void OnDefinition1Changed();
    partial void OnDefGroupIdChanging(System.Nullable<int> value);
    partial void OnDefGroupIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBitChanging(System.Nullable<bool> value);
    partial void OnBitChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnNum1Changing(System.Nullable<int> value);
    partial void OnNum1Changed();
    partial void OnNum2Changing(System.Nullable<int> value);
    partial void OnNum2Changed();
    #endregion
		
		public Definition()
		{
			this._Stocks = new EntitySet<Stock>(new Action<Stock>(this.attach_Stocks), new Action<Stock>(this.detach_Stocks));
			this._DefinitionGroup = default(EntityRef<DefinitionGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeNum", DbType="NVarChar(100)")]
		public string CodeNum
		{
			get
			{
				return this._CodeNum;
			}
			set
			{
				if ((this._CodeNum != value))
				{
					this.OnCodeNumChanging(value);
					this.SendPropertyChanging();
					this._CodeNum = value;
					this.SendPropertyChanged("CodeNum");
					this.OnCodeNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Definition", Storage="_Definition1", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Definition1
		{
			get
			{
				return this._Definition1;
			}
			set
			{
				if ((this._Definition1 != value))
				{
					this.OnDefinition1Changing(value);
					this.SendPropertyChanging();
					this._Definition1 = value;
					this.SendPropertyChanged("Definition1");
					this.OnDefinition1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefGroupId", DbType="Int")]
		public System.Nullable<int> DefGroupId
		{
			get
			{
				return this._DefGroupId;
			}
			set
			{
				if ((this._DefGroupId != value))
				{
					if (this._DefinitionGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDefGroupIdChanging(value);
					this.SendPropertyChanging();
					this._DefGroupId = value;
					this.SendPropertyChanged("DefGroupId");
					this.OnDefGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bit", DbType="Bit")]
		public System.Nullable<bool> Bit
		{
			get
			{
				return this._Bit;
			}
			set
			{
				if ((this._Bit != value))
				{
					this.OnBitChanging(value);
					this.SendPropertyChanging();
					this._Bit = value;
					this.SendPropertyChanged("Bit");
					this.OnBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num1", DbType="Int")]
		public System.Nullable<int> Num1
		{
			get
			{
				return this._Num1;
			}
			set
			{
				if ((this._Num1 != value))
				{
					this.OnNum1Changing(value);
					this.SendPropertyChanging();
					this._Num1 = value;
					this.SendPropertyChanged("Num1");
					this.OnNum1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num2", DbType="Int")]
		public System.Nullable<int> Num2
		{
			get
			{
				return this._Num2;
			}
			set
			{
				if ((this._Num2 != value))
				{
					this.OnNum2Changing(value);
					this.SendPropertyChanging();
					this._Num2 = value;
					this.SendPropertyChanged("Num2");
					this.OnNum2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Stock", Storage="_Stocks", ThisKey="Id", OtherKey="MarketId")]
		public EntitySet<Stock> Stocks
		{
			get
			{
				return this._Stocks;
			}
			set
			{
				this._Stocks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DefinitionGroup_Definition", Storage="_DefinitionGroup", ThisKey="DefGroupId", OtherKey="Id", IsForeignKey=true)]
		public DefinitionGroup DefinitionGroup
		{
			get
			{
				return this._DefinitionGroup.Entity;
			}
			set
			{
				DefinitionGroup previousValue = this._DefinitionGroup.Entity;
				if (((previousValue != value) 
							|| (this._DefinitionGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DefinitionGroup.Entity = null;
						previousValue.Definitions.Remove(this);
					}
					this._DefinitionGroup.Entity = value;
					if ((value != null))
					{
						value.Definitions.Add(this);
						this._DefGroupId = value.Id;
					}
					else
					{
						this._DefGroupId = default(Nullable<int>);
					}
					this.SendPropertyChanged("DefinitionGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stock")]
	public partial class Stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Stock1;
		
		private System.Nullable<double> _PE;
		
		private System.Nullable<double> _PB;
		
		private System.Nullable<double> _EPS;
		
		private System.Nullable<double> _Capitalization;
		
		private System.Nullable<double> _Income;
		
		private System.Nullable<double> _Property;
		
		private System.Nullable<double> _PAT;
		
		private System.Nullable<double> _ROA;
		
		private System.Nullable<double> _ROE;
		
		private System.Nullable<double> _MarginProfit;
		
		private System.Nullable<double> _PBT;
		
		private System.Nullable<double> _DebtPerProperty;
		
		private System.Nullable<double> _Short;
		
		private System.Nullable<int> _BranchId;
		
		private System.Nullable<int> _MarketId;
		
		private EntitySet<Event> _Events;
		
		private EntitySet<Price> _Prices;
		
		private EntityRef<Definition> _Definition;
		
		private EntityRef<Branch> _Branch;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnStock1Changing(string value);
    partial void OnStock1Changed();
    partial void OnPEChanging(System.Nullable<double> value);
    partial void OnPEChanged();
    partial void OnPBChanging(System.Nullable<double> value);
    partial void OnPBChanged();
    partial void OnEPSChanging(System.Nullable<double> value);
    partial void OnEPSChanged();
    partial void OnCapitalizationChanging(System.Nullable<double> value);
    partial void OnCapitalizationChanged();
    partial void OnIncomeChanging(System.Nullable<double> value);
    partial void OnIncomeChanged();
    partial void OnPropertyChanging(System.Nullable<double> value);
    partial void OnPropertyChanged();
    partial void OnPATChanging(System.Nullable<double> value);
    partial void OnPATChanged();
    partial void OnROAChanging(System.Nullable<double> value);
    partial void OnROAChanged();
    partial void OnROEChanging(System.Nullable<double> value);
    partial void OnROEChanged();
    partial void OnMarginProfitChanging(System.Nullable<double> value);
    partial void OnMarginProfitChanged();
    partial void OnPBTChanging(System.Nullable<double> value);
    partial void OnPBTChanged();
    partial void OnDebtPerPropertyChanging(System.Nullable<double> value);
    partial void OnDebtPerPropertyChanged();
    partial void OnShortChanging(System.Nullable<double> value);
    partial void OnShortChanged();
    partial void OnBranchIdChanging(System.Nullable<int> value);
    partial void OnBranchIdChanged();
    partial void OnMarketIdChanging(System.Nullable<int> value);
    partial void OnMarketIdChanged();
    #endregion
		
		public Stock()
		{
			this._Events = new EntitySet<Event>(new Action<Event>(this.attach_Events), new Action<Event>(this.detach_Events));
			this._Prices = new EntitySet<Price>(new Action<Price>(this.attach_Prices), new Action<Price>(this.detach_Prices));
			this._Definition = default(EntityRef<Definition>);
			this._Branch = default(EntityRef<Branch>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Stock", Storage="_Stock1", DbType="NVarChar(500)")]
		public string Stock1
		{
			get
			{
				return this._Stock1;
			}
			set
			{
				if ((this._Stock1 != value))
				{
					this.OnStock1Changing(value);
					this.SendPropertyChanging();
					this._Stock1 = value;
					this.SendPropertyChanged("Stock1");
					this.OnStock1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PE", DbType="Float")]
		public System.Nullable<double> PE
		{
			get
			{
				return this._PE;
			}
			set
			{
				if ((this._PE != value))
				{
					this.OnPEChanging(value);
					this.SendPropertyChanging();
					this._PE = value;
					this.SendPropertyChanged("PE");
					this.OnPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PB", DbType="Float")]
		public System.Nullable<double> PB
		{
			get
			{
				return this._PB;
			}
			set
			{
				if ((this._PB != value))
				{
					this.OnPBChanging(value);
					this.SendPropertyChanging();
					this._PB = value;
					this.SendPropertyChanged("PB");
					this.OnPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPS", DbType="Float")]
		public System.Nullable<double> EPS
		{
			get
			{
				return this._EPS;
			}
			set
			{
				if ((this._EPS != value))
				{
					this.OnEPSChanging(value);
					this.SendPropertyChanging();
					this._EPS = value;
					this.SendPropertyChanged("EPS");
					this.OnEPSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capitalization", DbType="Float")]
		public System.Nullable<double> Capitalization
		{
			get
			{
				return this._Capitalization;
			}
			set
			{
				if ((this._Capitalization != value))
				{
					this.OnCapitalizationChanging(value);
					this.SendPropertyChanging();
					this._Capitalization = value;
					this.SendPropertyChanged("Capitalization");
					this.OnCapitalizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Income", DbType="Float")]
		public System.Nullable<double> Income
		{
			get
			{
				return this._Income;
			}
			set
			{
				if ((this._Income != value))
				{
					this.OnIncomeChanging(value);
					this.SendPropertyChanging();
					this._Income = value;
					this.SendPropertyChanged("Income");
					this.OnIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Property", DbType="Float")]
		public System.Nullable<double> Property
		{
			get
			{
				return this._Property;
			}
			set
			{
				if ((this._Property != value))
				{
					this.OnPropertyChanging(value);
					this.SendPropertyChanging();
					this._Property = value;
					this.SendPropertyChanged("Property");
					this.OnPropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAT", DbType="Float")]
		public System.Nullable<double> PAT
		{
			get
			{
				return this._PAT;
			}
			set
			{
				if ((this._PAT != value))
				{
					this.OnPATChanging(value);
					this.SendPropertyChanging();
					this._PAT = value;
					this.SendPropertyChanged("PAT");
					this.OnPATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROA", DbType="Float")]
		public System.Nullable<double> ROA
		{
			get
			{
				return this._ROA;
			}
			set
			{
				if ((this._ROA != value))
				{
					this.OnROAChanging(value);
					this.SendPropertyChanging();
					this._ROA = value;
					this.SendPropertyChanged("ROA");
					this.OnROAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROE", DbType="Float")]
		public System.Nullable<double> ROE
		{
			get
			{
				return this._ROE;
			}
			set
			{
				if ((this._ROE != value))
				{
					this.OnROEChanging(value);
					this.SendPropertyChanging();
					this._ROE = value;
					this.SendPropertyChanged("ROE");
					this.OnROEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginProfit", DbType="Float")]
		public System.Nullable<double> MarginProfit
		{
			get
			{
				return this._MarginProfit;
			}
			set
			{
				if ((this._MarginProfit != value))
				{
					this.OnMarginProfitChanging(value);
					this.SendPropertyChanging();
					this._MarginProfit = value;
					this.SendPropertyChanged("MarginProfit");
					this.OnMarginProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBT", DbType="Float")]
		public System.Nullable<double> PBT
		{
			get
			{
				return this._PBT;
			}
			set
			{
				if ((this._PBT != value))
				{
					this.OnPBTChanging(value);
					this.SendPropertyChanging();
					this._PBT = value;
					this.SendPropertyChanged("PBT");
					this.OnPBTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebtPerProperty", DbType="Float")]
		public System.Nullable<double> DebtPerProperty
		{
			get
			{
				return this._DebtPerProperty;
			}
			set
			{
				if ((this._DebtPerProperty != value))
				{
					this.OnDebtPerPropertyChanging(value);
					this.SendPropertyChanging();
					this._DebtPerProperty = value;
					this.SendPropertyChanged("DebtPerProperty");
					this.OnDebtPerPropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Short", DbType="Float")]
		public System.Nullable<double> Short
		{
			get
			{
				return this._Short;
			}
			set
			{
				if ((this._Short != value))
				{
					this.OnShortChanging(value);
					this.SendPropertyChanging();
					this._Short = value;
					this.SendPropertyChanged("Short");
					this.OnShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					if (this._Branch.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketId", DbType="Int")]
		public System.Nullable<int> MarketId
		{
			get
			{
				return this._MarketId;
			}
			set
			{
				if ((this._MarketId != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarketIdChanging(value);
					this.SendPropertyChanging();
					this._MarketId = value;
					this.SendPropertyChanged("MarketId");
					this.OnMarketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stock_Event", Storage="_Events", ThisKey="Id", OtherKey="StockId")]
		public EntitySet<Event> Events
		{
			get
			{
				return this._Events;
			}
			set
			{
				this._Events.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stock_Price", Storage="_Prices", ThisKey="Id", OtherKey="StockId")]
		public EntitySet<Price> Prices
		{
			get
			{
				return this._Prices;
			}
			set
			{
				this._Prices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Stock", Storage="_Definition", ThisKey="MarketId", OtherKey="Id", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Stocks.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Stocks.Add(this);
						this._MarketId = value.Id;
					}
					else
					{
						this._MarketId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Stock", Storage="_Branch", ThisKey="BranchId", OtherKey="Id", IsForeignKey=true)]
		public Branch Branch
		{
			get
			{
				return this._Branch.Entity;
			}
			set
			{
				Branch previousValue = this._Branch.Entity;
				if (((previousValue != value) 
							|| (this._Branch.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Branch.Entity = null;
						previousValue.Stocks.Remove(this);
					}
					this._Branch.Entity = value;
					if ((value != null))
					{
						value.Stocks.Add(this);
						this._BranchId = value.Id;
					}
					else
					{
						this._BranchId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Branch");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Stock = this;
		}
		
		private void detach_Events(Event entity)
		{
			this.SendPropertyChanging();
			entity.Stock = null;
		}
		
		private void attach_Prices(Price entity)
		{
			this.SendPropertyChanging();
			entity.Stock = this;
		}
		
		private void detach_Prices(Price entity)
		{
			this.SendPropertyChanging();
			entity.Stock = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _GroupId;
		
		private string _Branch1;
		
		private System.Nullable<decimal> _PE;
		
		private System.Nullable<decimal> _PB;
		
		private System.Nullable<decimal> _EPS;
		
		private System.Nullable<decimal> _Capitalization;
		
		private System.Nullable<decimal> _Income;
		
		private System.Nullable<decimal> _Property;
		
		private System.Nullable<decimal> _PAT;
		
		private System.Nullable<decimal> _ROA;
		
		private System.Nullable<decimal> _ROE;
		
		private System.Nullable<decimal> _MarginProfit;
		
		private System.Nullable<decimal> _PBT;
		
		private System.Nullable<decimal> _DebtPerProperty;
		
		private System.Nullable<decimal> _Short;
		
		private string _FPTS;
		
		private EntitySet<Stock> _Stocks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnBranch1Changing(string value);
    partial void OnBranch1Changed();
    partial void OnPEChanging(System.Nullable<decimal> value);
    partial void OnPEChanged();
    partial void OnPBChanging(System.Nullable<decimal> value);
    partial void OnPBChanged();
    partial void OnEPSChanging(System.Nullable<decimal> value);
    partial void OnEPSChanged();
    partial void OnCapitalizationChanging(System.Nullable<decimal> value);
    partial void OnCapitalizationChanged();
    partial void OnIncomeChanging(System.Nullable<decimal> value);
    partial void OnIncomeChanged();
    partial void OnPropertyChanging(System.Nullable<decimal> value);
    partial void OnPropertyChanged();
    partial void OnPATChanging(System.Nullable<decimal> value);
    partial void OnPATChanged();
    partial void OnROAChanging(System.Nullable<decimal> value);
    partial void OnROAChanged();
    partial void OnROEChanging(System.Nullable<decimal> value);
    partial void OnROEChanged();
    partial void OnMarginProfitChanging(System.Nullable<decimal> value);
    partial void OnMarginProfitChanged();
    partial void OnPBTChanging(System.Nullable<decimal> value);
    partial void OnPBTChanged();
    partial void OnDebtPerPropertyChanging(System.Nullable<decimal> value);
    partial void OnDebtPerPropertyChanged();
    partial void OnShortChanging(System.Nullable<decimal> value);
    partial void OnShortChanged();
    partial void OnFPTSChanging(string value);
    partial void OnFPTSChanged();
    #endregion
		
		public Branch()
		{
			this._Stocks = new EntitySet<Stock>(new Action<Stock>(this.attach_Stocks), new Action<Stock>(this.detach_Stocks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Branch", Storage="_Branch1", DbType="NVarChar(500)")]
		public string Branch1
		{
			get
			{
				return this._Branch1;
			}
			set
			{
				if ((this._Branch1 != value))
				{
					this.OnBranch1Changing(value);
					this.SendPropertyChanging();
					this._Branch1 = value;
					this.SendPropertyChanged("Branch1");
					this.OnBranch1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PE", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PE
		{
			get
			{
				return this._PE;
			}
			set
			{
				if ((this._PE != value))
				{
					this.OnPEChanging(value);
					this.SendPropertyChanging();
					this._PE = value;
					this.SendPropertyChanged("PE");
					this.OnPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PB", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PB
		{
			get
			{
				return this._PB;
			}
			set
			{
				if ((this._PB != value))
				{
					this.OnPBChanging(value);
					this.SendPropertyChanging();
					this._PB = value;
					this.SendPropertyChanged("PB");
					this.OnPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> EPS
		{
			get
			{
				return this._EPS;
			}
			set
			{
				if ((this._EPS != value))
				{
					this.OnEPSChanging(value);
					this.SendPropertyChanging();
					this._EPS = value;
					this.SendPropertyChanged("EPS");
					this.OnEPSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capitalization", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Capitalization
		{
			get
			{
				return this._Capitalization;
			}
			set
			{
				if ((this._Capitalization != value))
				{
					this.OnCapitalizationChanging(value);
					this.SendPropertyChanging();
					this._Capitalization = value;
					this.SendPropertyChanged("Capitalization");
					this.OnCapitalizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Income", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Income
		{
			get
			{
				return this._Income;
			}
			set
			{
				if ((this._Income != value))
				{
					this.OnIncomeChanging(value);
					this.SendPropertyChanging();
					this._Income = value;
					this.SendPropertyChanged("Income");
					this.OnIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Property", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Property
		{
			get
			{
				return this._Property;
			}
			set
			{
				if ((this._Property != value))
				{
					this.OnPropertyChanging(value);
					this.SendPropertyChanging();
					this._Property = value;
					this.SendPropertyChanged("Property");
					this.OnPropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PAT
		{
			get
			{
				return this._PAT;
			}
			set
			{
				if ((this._PAT != value))
				{
					this.OnPATChanging(value);
					this.SendPropertyChanging();
					this._PAT = value;
					this.SendPropertyChanged("PAT");
					this.OnPATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROA", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ROA
		{
			get
			{
				return this._ROA;
			}
			set
			{
				if ((this._ROA != value))
				{
					this.OnROAChanging(value);
					this.SendPropertyChanging();
					this._ROA = value;
					this.SendPropertyChanged("ROA");
					this.OnROAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROE", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ROE
		{
			get
			{
				return this._ROE;
			}
			set
			{
				if ((this._ROE != value))
				{
					this.OnROEChanging(value);
					this.SendPropertyChanging();
					this._ROE = value;
					this.SendPropertyChanged("ROE");
					this.OnROEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginProfit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MarginProfit
		{
			get
			{
				return this._MarginProfit;
			}
			set
			{
				if ((this._MarginProfit != value))
				{
					this.OnMarginProfitChanging(value);
					this.SendPropertyChanging();
					this._MarginProfit = value;
					this.SendPropertyChanged("MarginProfit");
					this.OnMarginProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PBT
		{
			get
			{
				return this._PBT;
			}
			set
			{
				if ((this._PBT != value))
				{
					this.OnPBTChanging(value);
					this.SendPropertyChanging();
					this._PBT = value;
					this.SendPropertyChanged("PBT");
					this.OnPBTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebtPerProperty", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DebtPerProperty
		{
			get
			{
				return this._DebtPerProperty;
			}
			set
			{
				if ((this._DebtPerProperty != value))
				{
					this.OnDebtPerPropertyChanging(value);
					this.SendPropertyChanging();
					this._DebtPerProperty = value;
					this.SendPropertyChanged("DebtPerProperty");
					this.OnDebtPerPropertyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Short", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Short
		{
			get
			{
				return this._Short;
			}
			set
			{
				if ((this._Short != value))
				{
					this.OnShortChanging(value);
					this.SendPropertyChanging();
					this._Short = value;
					this.SendPropertyChanged("Short");
					this.OnShortChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FPTS", DbType="NVarChar(500)")]
		public string FPTS
		{
			get
			{
				return this._FPTS;
			}
			set
			{
				if ((this._FPTS != value))
				{
					this.OnFPTSChanging(value);
					this.SendPropertyChanging();
					this._FPTS = value;
					this.SendPropertyChanged("FPTS");
					this.OnFPTSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Branch_Stock", Storage="_Stocks", ThisKey="Id", OtherKey="BranchId")]
		public EntitySet<Stock> Stocks
		{
			get
			{
				return this._Stocks;
			}
			set
			{
				this._Stocks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Branch = this;
		}
		
		private void detach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Branch = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefinitionGroup")]
	public partial class DefinitionGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DefGroup;
		
		private string _Description;
		
		private System.Nullable<int> _First;
		
		private System.Nullable<int> _Last;
		
		private EntitySet<Definition> _Definitions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDefGroupChanging(string value);
    partial void OnDefGroupChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFirstChanging(System.Nullable<int> value);
    partial void OnFirstChanged();
    partial void OnLastChanging(System.Nullable<int> value);
    partial void OnLastChanged();
    #endregion
		
		public DefinitionGroup()
		{
			this._Definitions = new EntitySet<Definition>(new Action<Definition>(this.attach_Definitions), new Action<Definition>(this.detach_Definitions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefGroup", DbType="NVarChar(50)")]
		public string DefGroup
		{
			get
			{
				return this._DefGroup;
			}
			set
			{
				if ((this._DefGroup != value))
				{
					this.OnDefGroupChanging(value);
					this.SendPropertyChanging();
					this._DefGroup = value;
					this.SendPropertyChanged("DefGroup");
					this.OnDefGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First", DbType="Int")]
		public System.Nullable<int> First
		{
			get
			{
				return this._First;
			}
			set
			{
				if ((this._First != value))
				{
					this.OnFirstChanging(value);
					this.SendPropertyChanging();
					this._First = value;
					this.SendPropertyChanged("First");
					this.OnFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last", DbType="Int")]
		public System.Nullable<int> Last
		{
			get
			{
				return this._Last;
			}
			set
			{
				if ((this._Last != value))
				{
					this.OnLastChanging(value);
					this.SendPropertyChanging();
					this._Last = value;
					this.SendPropertyChanged("Last");
					this.OnLastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DefinitionGroup_Definition", Storage="_Definitions", ThisKey="Id", OtherKey="DefGroupId")]
		public EntitySet<Definition> Definitions
		{
			get
			{
				return this._Definitions;
			}
			set
			{
				this._Definitions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.DefinitionGroup = this;
		}
		
		private void detach_Definitions(Definition entity)
		{
			this.SendPropertyChanging();
			entity.DefinitionGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vDefinition")]
	public partial class vDefinition
	{
		
		private int _Id;
		
		private string _CodeNum;
		
		private string _Definition;
		
		private string _DefGroup;
		
		private string _Description;
		
		private System.Nullable<bool> _Bit;
		
		private System.Nullable<int> _Num1;
		
		private System.Nullable<int> _Num2;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _DefGroupId;
		
		public vDefinition()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeNum", DbType="NVarChar(100)")]
		public string CodeNum
		{
			get
			{
				return this._CodeNum;
			}
			set
			{
				if ((this._CodeNum != value))
				{
					this._CodeNum = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Definition", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this._Definition = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefGroup", DbType="NVarChar(50)")]
		public string DefGroup
		{
			get
			{
				return this._DefGroup;
			}
			set
			{
				if ((this._DefGroup != value))
				{
					this._DefGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bit", DbType="Bit")]
		public System.Nullable<bool> Bit
		{
			get
			{
				return this._Bit;
			}
			set
			{
				if ((this._Bit != value))
				{
					this._Bit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num1", DbType="Int")]
		public System.Nullable<int> Num1
		{
			get
			{
				return this._Num1;
			}
			set
			{
				if ((this._Num1 != value))
				{
					this._Num1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num2", DbType="Int")]
		public System.Nullable<int> Num2
		{
			get
			{
				return this._Num2;
			}
			set
			{
				if ((this._Num2 != value))
				{
					this._Num2 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefGroupId", DbType="Int")]
		public System.Nullable<int> DefGroupId
		{
			get
			{
				return this._DefGroupId;
			}
			set
			{
				if ((this._DefGroupId != value))
				{
					this._DefGroupId = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Event")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<System.DateTime> _NoRightDate;
		
		private System.Nullable<System.DateTime> _LastRegisterDate;
		
		private System.Nullable<System.DateTime> _ExecuteDate;
		
		private string _Description;
		
		private System.Nullable<decimal> _Value;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _MethodId;
		
		private EntityRef<Stock> _Stock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockIdChanging(System.Nullable<int> value);
    partial void OnStockIdChanged();
    partial void OnNoRightDateChanging(System.Nullable<System.DateTime> value);
    partial void OnNoRightDateChanged();
    partial void OnLastRegisterDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastRegisterDateChanged();
    partial void OnExecuteDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExecuteDateChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnValueChanging(System.Nullable<decimal> value);
    partial void OnValueChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnMethodIdChanging(System.Nullable<int> value);
    partial void OnMethodIdChanged();
    #endregion
		
		public Event()
		{
			this._Stock = default(EntityRef<Stock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					if (this._Stock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockIdChanging(value);
					this.SendPropertyChanging();
					this._StockId = value;
					this.SendPropertyChanged("StockId");
					this.OnStockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoRightDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NoRightDate
		{
			get
			{
				return this._NoRightDate;
			}
			set
			{
				if ((this._NoRightDate != value))
				{
					this.OnNoRightDateChanging(value);
					this.SendPropertyChanging();
					this._NoRightDate = value;
					this.SendPropertyChanged("NoRightDate");
					this.OnNoRightDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRegisterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastRegisterDate
		{
			get
			{
				return this._LastRegisterDate;
			}
			set
			{
				if ((this._LastRegisterDate != value))
				{
					this.OnLastRegisterDateChanging(value);
					this.SendPropertyChanging();
					this._LastRegisterDate = value;
					this.SendPropertyChanged("LastRegisterDate");
					this.OnLastRegisterDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecuteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExecuteDate
		{
			get
			{
				return this._ExecuteDate;
			}
			set
			{
				if ((this._ExecuteDate != value))
				{
					this.OnExecuteDateChanging(value);
					this.SendPropertyChanging();
					this._ExecuteDate = value;
					this.SendPropertyChanged("ExecuteDate");
					this.OnExecuteDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodId", DbType="Int")]
		public System.Nullable<int> MethodId
		{
			get
			{
				return this._MethodId;
			}
			set
			{
				if ((this._MethodId != value))
				{
					this.OnMethodIdChanging(value);
					this.SendPropertyChanging();
					this._MethodId = value;
					this.SendPropertyChanged("MethodId");
					this.OnMethodIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stock_Event", Storage="_Stock", ThisKey="StockId", OtherKey="Id", IsForeignKey=true)]
		public Stock Stock
		{
			get
			{
				return this._Stock.Entity;
			}
			set
			{
				Stock previousValue = this._Stock.Entity;
				if (((previousValue != value) 
							|| (this._Stock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stock.Entity = null;
						previousValue.Events.Remove(this);
					}
					this._Stock.Entity = value;
					if ((value != null))
					{
						value.Events.Add(this);
						this._StockId = value.Id;
					}
					else
					{
						this._StockId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Stock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vPortfolio")]
	public partial class vPortfolio
	{
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<decimal> _BuyPrice;
		
		private System.Nullable<decimal> _BuyRealPrice;
		
		private System.Nullable<decimal> _SalePrice;
		
		private System.Nullable<decimal> _SaleRealPrice;
		
		private System.Nullable<System.DateTime> _BuyRealDate;
		
		private System.Nullable<System.DateTime> _SaleRealDate;
		
		private string _Stock;
		
		public vPortfolio()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this._StockId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BuyPrice
		{
			get
			{
				return this._BuyPrice;
			}
			set
			{
				if ((this._BuyPrice != value))
				{
					this._BuyPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyRealPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BuyRealPrice
		{
			get
			{
				return this._BuyRealPrice;
			}
			set
			{
				if ((this._BuyRealPrice != value))
				{
					this._BuyRealPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this._SalePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleRealPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SaleRealPrice
		{
			get
			{
				return this._SaleRealPrice;
			}
			set
			{
				if ((this._SaleRealPrice != value))
				{
					this._SaleRealPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyRealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BuyRealDate
		{
			get
			{
				return this._BuyRealDate;
			}
			set
			{
				if ((this._BuyRealDate != value))
				{
					this._BuyRealDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleRealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SaleRealDate
		{
			get
			{
				return this._SaleRealDate;
			}
			set
			{
				if ((this._SaleRealDate != value))
				{
					this._SaleRealDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this._Stock = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Portfolio")]
	public partial class Portfolio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<decimal> _BuyPrice;
		
		private System.Nullable<decimal> _BuyRealPrice;
		
		private System.Nullable<decimal> _SalePrice;
		
		private System.Nullable<decimal> _SaleRealPrice;
		
		private System.Nullable<System.DateTime> _BuyRealDate;
		
		private System.Nullable<System.DateTime> _SaleRealDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockIdChanging(System.Nullable<int> value);
    partial void OnStockIdChanged();
    partial void OnBuyPriceChanging(System.Nullable<decimal> value);
    partial void OnBuyPriceChanged();
    partial void OnBuyRealPriceChanging(System.Nullable<decimal> value);
    partial void OnBuyRealPriceChanged();
    partial void OnSalePriceChanging(System.Nullable<decimal> value);
    partial void OnSalePriceChanged();
    partial void OnSaleRealPriceChanging(System.Nullable<decimal> value);
    partial void OnSaleRealPriceChanged();
    partial void OnBuyRealDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBuyRealDateChanged();
    partial void OnSaleRealDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaleRealDateChanged();
    #endregion
		
		public Portfolio()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this.OnStockIdChanging(value);
					this.SendPropertyChanging();
					this._StockId = value;
					this.SendPropertyChanged("StockId");
					this.OnStockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BuyPrice
		{
			get
			{
				return this._BuyPrice;
			}
			set
			{
				if ((this._BuyPrice != value))
				{
					this.OnBuyPriceChanging(value);
					this.SendPropertyChanging();
					this._BuyPrice = value;
					this.SendPropertyChanged("BuyPrice");
					this.OnBuyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyRealPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BuyRealPrice
		{
			get
			{
				return this._BuyRealPrice;
			}
			set
			{
				if ((this._BuyRealPrice != value))
				{
					this.OnBuyRealPriceChanging(value);
					this.SendPropertyChanging();
					this._BuyRealPrice = value;
					this.SendPropertyChanged("BuyRealPrice");
					this.OnBuyRealPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleRealPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SaleRealPrice
		{
			get
			{
				return this._SaleRealPrice;
			}
			set
			{
				if ((this._SaleRealPrice != value))
				{
					this.OnSaleRealPriceChanging(value);
					this.SendPropertyChanging();
					this._SaleRealPrice = value;
					this.SendPropertyChanged("SaleRealPrice");
					this.OnSaleRealPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyRealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BuyRealDate
		{
			get
			{
				return this._BuyRealDate;
			}
			set
			{
				if ((this._BuyRealDate != value))
				{
					this.OnBuyRealDateChanging(value);
					this.SendPropertyChanging();
					this._BuyRealDate = value;
					this.SendPropertyChanged("BuyRealDate");
					this.OnBuyRealDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleRealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SaleRealDate
		{
			get
			{
				return this._SaleRealDate;
			}
			set
			{
				if ((this._SaleRealDate != value))
				{
					this.OnSaleRealDateChanging(value);
					this.SendPropertyChanging();
					this._SaleRealDate = value;
					this.SendPropertyChanged("SaleRealDate");
					this.OnSaleRealDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Price")]
	public partial class Price : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<System.DateTime> _PriceDate;
		
		private System.Nullable<decimal> _OpenPrice;
		
		private System.Nullable<decimal> _HighPrice;
		
		private System.Nullable<decimal> _LowPrice;
		
		private System.Nullable<decimal> _ClosePrice;
		
		private System.Nullable<int> _Volume;
		
		private EntityRef<Stock> _Stock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockIdChanging(System.Nullable<int> value);
    partial void OnStockIdChanged();
    partial void OnPriceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPriceDateChanged();
    partial void OnOpenPriceChanging(System.Nullable<decimal> value);
    partial void OnOpenPriceChanged();
    partial void OnHighPriceChanging(System.Nullable<decimal> value);
    partial void OnHighPriceChanged();
    partial void OnLowPriceChanging(System.Nullable<decimal> value);
    partial void OnLowPriceChanged();
    partial void OnClosePriceChanging(System.Nullable<decimal> value);
    partial void OnClosePriceChanged();
    partial void OnVolumeChanging(System.Nullable<int> value);
    partial void OnVolumeChanged();
    #endregion
		
		public Price()
		{
			this._Stock = default(EntityRef<Stock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					if (this._Stock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockIdChanging(value);
					this.SendPropertyChanging();
					this._StockId = value;
					this.SendPropertyChanged("StockId");
					this.OnStockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PriceDate
		{
			get
			{
				return this._PriceDate;
			}
			set
			{
				if ((this._PriceDate != value))
				{
					this.OnPriceDateChanging(value);
					this.SendPropertyChanging();
					this._PriceDate = value;
					this.SendPropertyChanged("PriceDate");
					this.OnPriceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this.OnOpenPriceChanging(value);
					this.SendPropertyChanging();
					this._OpenPrice = value;
					this.SendPropertyChanged("OpenPrice");
					this.OnOpenPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> HighPrice
		{
			get
			{
				return this._HighPrice;
			}
			set
			{
				if ((this._HighPrice != value))
				{
					this.OnHighPriceChanging(value);
					this.SendPropertyChanging();
					this._HighPrice = value;
					this.SendPropertyChanged("HighPrice");
					this.OnHighPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LowPrice
		{
			get
			{
				return this._LowPrice;
			}
			set
			{
				if ((this._LowPrice != value))
				{
					this.OnLowPriceChanging(value);
					this.SendPropertyChanging();
					this._LowPrice = value;
					this.SendPropertyChanged("LowPrice");
					this.OnLowPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this.OnClosePriceChanging(value);
					this.SendPropertyChanging();
					this._ClosePrice = value;
					this.SendPropertyChanged("ClosePrice");
					this.OnClosePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int")]
		public System.Nullable<int> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stock_Price", Storage="_Stock", ThisKey="StockId", OtherKey="Id", IsForeignKey=true)]
		public Stock Stock
		{
			get
			{
				return this._Stock.Entity;
			}
			set
			{
				Stock previousValue = this._Stock.Entity;
				if (((previousValue != value) 
							|| (this._Stock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stock.Entity = null;
						previousValue.Prices.Remove(this);
					}
					this._Stock.Entity = value;
					if ((value != null))
					{
						value.Prices.Add(this);
						this._StockId = value.Id;
					}
					else
					{
						this._StockId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Stock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vEvent")]
	public partial class vEvent
	{
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<System.DateTime> _NoRightDate;
		
		private System.Nullable<System.DateTime> _LastRegisterDate;
		
		private System.Nullable<System.DateTime> _ExecuteDate;
		
		private string _Description;
		
		private System.Nullable<decimal> _Value;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<int> _MethodId;
		
		private string _Method;
		
		private string _TypeName;
		
		private string _Code;
		
		private string _Stock;
		
		public vEvent()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this._StockId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoRightDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> NoRightDate
		{
			get
			{
				return this._NoRightDate;
			}
			set
			{
				if ((this._NoRightDate != value))
				{
					this._NoRightDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastRegisterDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastRegisterDate
		{
			get
			{
				return this._LastRegisterDate;
			}
			set
			{
				if ((this._LastRegisterDate != value))
				{
					this._LastRegisterDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExecuteDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExecuteDate
		{
			get
			{
				return this._ExecuteDate;
			}
			set
			{
				if ((this._ExecuteDate != value))
				{
					this._ExecuteDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(4000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this._Value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this._Type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodId", DbType="Int")]
		public System.Nullable<int> MethodId
		{
			get
			{
				return this._MethodId;
			}
			set
			{
				if ((this._MethodId != value))
				{
					this._MethodId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Method", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Method
		{
			get
			{
				return this._Method;
			}
			set
			{
				if ((this._Method != value))
				{
					this._Method = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(100)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="NVarChar(500)")]
		public string Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this._Stock = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.News")]
	public partial class New : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Title;
		
		private string _Detail;
		
		private System.Nullable<System.DateTime> _PublishDate;
		
		private System.Nullable<int> _NewsTypeId;
		
		private System.Nullable<bool> _IsGood;
		
		private System.Nullable<int> _BranchId;
		
		private System.Nullable<int> _StockId;
		
		private string _Link;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnDetailChanging(string value);
    partial void OnDetailChanged();
    partial void OnPublishDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishDateChanged();
    partial void OnNewsTypeIdChanging(System.Nullable<int> value);
    partial void OnNewsTypeIdChanged();
    partial void OnIsGoodChanging(System.Nullable<bool> value);
    partial void OnIsGoodChanged();
    partial void OnBranchIdChanging(System.Nullable<int> value);
    partial void OnBranchIdChanged();
    partial void OnStockIdChanging(System.Nullable<int> value);
    partial void OnStockIdChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    #endregion
		
		public New()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="NVarChar(500)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Detail", DbType="NVarChar(MAX)")]
		public string Detail
		{
			get
			{
				return this._Detail;
			}
			set
			{
				if ((this._Detail != value))
				{
					this.OnDetailChanging(value);
					this.SendPropertyChanging();
					this._Detail = value;
					this.SendPropertyChanged("Detail");
					this.OnDetailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PublishDate
		{
			get
			{
				return this._PublishDate;
			}
			set
			{
				if ((this._PublishDate != value))
				{
					this.OnPublishDateChanging(value);
					this.SendPropertyChanging();
					this._PublishDate = value;
					this.SendPropertyChanged("PublishDate");
					this.OnPublishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewsTypeId", DbType="Int")]
		public System.Nullable<int> NewsTypeId
		{
			get
			{
				return this._NewsTypeId;
			}
			set
			{
				if ((this._NewsTypeId != value))
				{
					this.OnNewsTypeIdChanging(value);
					this.SendPropertyChanging();
					this._NewsTypeId = value;
					this.SendPropertyChanged("NewsTypeId");
					this.OnNewsTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGood", DbType="Bit")]
		public System.Nullable<bool> IsGood
		{
			get
			{
				return this._IsGood;
			}
			set
			{
				if ((this._IsGood != value))
				{
					this.OnIsGoodChanging(value);
					this.SendPropertyChanging();
					this._IsGood = value;
					this.SendPropertyChanged("IsGood");
					this.OnIsGoodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this.OnStockIdChanging(value);
					this.SendPropertyChanging();
					this._StockId = value;
					this.SendPropertyChanged("StockId");
					this.OnStockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(500)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
