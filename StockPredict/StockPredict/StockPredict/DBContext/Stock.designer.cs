#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StockPredict.DBContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Stock")]
	public partial class StockDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertParameter(Parameter instance);
    partial void UpdateParameter(Parameter instance);
    partial void DeleteParameter(Parameter instance);
    partial void InsertFinanceValue(FinanceValue instance);
    partial void UpdateFinanceValue(FinanceValue instance);
    partial void DeleteFinanceValue(FinanceValue instance);
    partial void InsertDefinition(Definition instance);
    partial void UpdateDefinition(Definition instance);
    partial void DeleteDefinition(Definition instance);
    partial void InsertParameterValue(ParameterValue instance);
    partial void UpdateParameterValue(ParameterValue instance);
    partial void DeleteParameterValue(ParameterValue instance);
    partial void InsertParameterGroup(ParameterGroup instance);
    partial void UpdateParameterGroup(ParameterGroup instance);
    partial void DeleteParameterGroup(ParameterGroup instance);
    partial void InsertParameterDefault(ParameterDefault instance);
    partial void UpdateParameterDefault(ParameterDefault instance);
    partial void DeleteParameterDefault(ParameterDefault instance);
    partial void InsertPrice(Price instance);
    partial void UpdatePrice(Price instance);
    partial void DeletePrice(Price instance);
    partial void InsertStockMonitor(StockMonitor instance);
    partial void UpdateStockMonitor(StockMonitor instance);
    partial void DeleteStockMonitor(StockMonitor instance);
    partial void InsertPortfolio(Portfolio instance);
    partial void UpdatePortfolio(Portfolio instance);
    partial void DeletePortfolio(Portfolio instance);
    partial void InsertStockHolder(StockHolder instance);
    partial void UpdateStockHolder(StockHolder instance);
    partial void DeleteStockHolder(StockHolder instance);
    partial void InsertBranch(Branch instance);
    partial void UpdateBranch(Branch instance);
    partial void DeleteBranch(Branch instance);
    partial void InsertStock(Stock instance);
    partial void UpdateStock(Stock instance);
    partial void DeleteStock(Stock instance);
    #endregion
		
		public StockDataContext() : 
				base(global::StockPredict.Properties.Settings.Default.StockConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public StockDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TempPriceList> TempPriceLists
		{
			get
			{
				return this.GetTable<TempPriceList>();
			}
		}
		
		public System.Data.Linq.Table<TempStockListbyBranch> TempStockListbyBranches
		{
			get
			{
				return this.GetTable<TempStockListbyBranch>();
			}
		}
		
		public System.Data.Linq.Table<Parameter> Parameters
		{
			get
			{
				return this.GetTable<Parameter>();
			}
		}
		
		public System.Data.Linq.Table<TempBranchFinanceList> TempBranchFinanceLists
		{
			get
			{
				return this.GetTable<TempBranchFinanceList>();
			}
		}
		
		public System.Data.Linq.Table<TempStockFinanceList> TempStockFinanceLists
		{
			get
			{
				return this.GetTable<TempStockFinanceList>();
			}
		}
		
		public System.Data.Linq.Table<FinanceValue> FinanceValues
		{
			get
			{
				return this.GetTable<FinanceValue>();
			}
		}
		
		public System.Data.Linq.Table<Definition> Definitions
		{
			get
			{
				return this.GetTable<Definition>();
			}
		}
		
		public System.Data.Linq.Table<ParameterValue> ParameterValues
		{
			get
			{
				return this.GetTable<ParameterValue>();
			}
		}
		
		public System.Data.Linq.Table<ParameterGroup> ParameterGroups
		{
			get
			{
				return this.GetTable<ParameterGroup>();
			}
		}
		
		public System.Data.Linq.Table<ParameterDefault> ParameterDefaults
		{
			get
			{
				return this.GetTable<ParameterDefault>();
			}
		}
		
		public System.Data.Linq.Table<Price> Prices
		{
			get
			{
				return this.GetTable<Price>();
			}
		}
		
		public System.Data.Linq.Table<StockMonitor> StockMonitors
		{
			get
			{
				return this.GetTable<StockMonitor>();
			}
		}
		
		public System.Data.Linq.Table<vStockMonitor> vStockMonitors
		{
			get
			{
				return this.GetTable<vStockMonitor>();
			}
		}
		
		public System.Data.Linq.Table<vStockFinance> vStockFinances
		{
			get
			{
				return this.GetTable<vStockFinance>();
			}
		}
		
		public System.Data.Linq.Table<vBranchFinance> vBranchFinances
		{
			get
			{
				return this.GetTable<vBranchFinance>();
			}
		}
		
		public System.Data.Linq.Table<Portfolio> Portfolios
		{
			get
			{
				return this.GetTable<Portfolio>();
			}
		}
		
		public System.Data.Linq.Table<vPortfolio> vPortfolios
		{
			get
			{
				return this.GetTable<vPortfolio>();
			}
		}
		
		public System.Data.Linq.Table<vStockInfo> vStockInfos
		{
			get
			{
				return this.GetTable<vStockInfo>();
			}
		}
		
		public System.Data.Linq.Table<StockHolder> StockHolders
		{
			get
			{
				return this.GetTable<StockHolder>();
			}
		}
		
		public System.Data.Linq.Table<vStockHolder> vStockHolders
		{
			get
			{
				return this.GetTable<vStockHolder>();
			}
		}
		
		public System.Data.Linq.Table<Branch> Branches
		{
			get
			{
				return this.GetTable<Branch>();
			}
		}
		
		public System.Data.Linq.Table<Stock> Stocks
		{
			get
			{
				return this.GetTable<Stock>();
			}
		}
		
		public System.Data.Linq.Table<vPrice> vPrices
		{
			get
			{
				return this.GetTable<vPrice>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.ReportChangePrice")]
		public int ReportChangePrice([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockFromId", DbType="Int")] System.Nullable<int> stockFromId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="StockToId", DbType="Int")] System.Nullable<int> stockToId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateFrom", DbType="DateTime")] System.Nullable<System.DateTime> dateFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DateTo", DbType="DateTime")] System.Nullable<System.DateTime> dateTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), stockFromId, stockToId, dateFrom, dateTo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetPriceList")]
		public int GetPriceList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(500)")] string sStockList, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dtFrom, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> dtTo)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sStockList, dtFrom, dtTo);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockListbyBranch")]
		public int GetStockListbyBranch([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(500)")] string sBranchList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sBranchList);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBranchFinanceList")]
		public int GetBranchFinanceList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(500)")] string sStockList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sStockList);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetStockFinanceList")]
		public int GetStockFinanceList([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(500)")] string sStockList)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sStockList);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spFinance")]
		public int spFinance([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> fromLst, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(MAX)")] string lst)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromLst, lst);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fPrice", IsComposable=true)]
		public IQueryable<fPriceResult> fPrice([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> fromId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> toId, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> to, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> changedPercent, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> all, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> avgVolume, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> minPrice, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> fiveBasicElement)
		{
			return this.CreateMethodCallQuery<fPriceResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), fromId, toId, from, to, changedPercent, all, avgVolume, minPrice, fiveBasicElement);
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fChangedPrice", IsComposable=true)]
		public IQueryable<fChangedPriceResult> fChangedPrice([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> from, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> to, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Bit")] System.Nullable<bool> all, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> avgVolume, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> top, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> fiveBasicElement)
		{
			return this.CreateMethodCallQuery<fChangedPriceResult>(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), from, to, all, avgVolume, top, fiveBasicElement);
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TempPriceList")]
	public partial class TempPriceList
	{
		
		private System.Nullable<int> _StockId;
		
		private string _Stock;
		
		private System.Nullable<double> _ChangePercent;
		
		private System.Nullable<System.DateTime> _CloseDate;
		
		private System.Nullable<double> _OpenPrice;
		
		private System.Nullable<double> _HighPrice;
		
		private System.Nullable<double> _LowPrice;
		
		private System.Nullable<double> _ClosePrice;
		
		private System.Nullable<int> _Volume;
		
		public TempPriceList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this._StockId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this._Stock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePercent", DbType="Float")]
		public System.Nullable<double> ChangePercent
		{
			get
			{
				return this._ChangePercent;
			}
			set
			{
				if ((this._ChangePercent != value))
				{
					this._ChangePercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CloseDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CloseDate
		{
			get
			{
				return this._CloseDate;
			}
			set
			{
				if ((this._CloseDate != value))
				{
					this._CloseDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Float")]
		public System.Nullable<double> OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this._OpenPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighPrice", DbType="Float")]
		public System.Nullable<double> HighPrice
		{
			get
			{
				return this._HighPrice;
			}
			set
			{
				if ((this._HighPrice != value))
				{
					this._HighPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowPrice", DbType="Float")]
		public System.Nullable<double> LowPrice
		{
			get
			{
				return this._LowPrice;
			}
			set
			{
				if ((this._LowPrice != value))
				{
					this._LowPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Float")]
		public System.Nullable<double> ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this._ClosePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int")]
		public System.Nullable<int> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this._Volume = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TempStockListbyBranch")]
	public partial class TempStockListbyBranch
	{
		
		private int _Id;
		
		private string _Stock;
		
		public TempStockListbyBranch()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this._Stock = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Parameter")]
	public partial class Parameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _GroupId;
		
		private string _Parameter1;
		
		private string _VNParameter;
		
		private string _Description;
		
		private string _FormatMask;
		
		private System.Nullable<byte> _StockPos;
		
		private System.Nullable<byte> _BranchPos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnParameter1Changing(string value);
    partial void OnParameter1Changed();
    partial void OnVNParameterChanging(string value);
    partial void OnVNParameterChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFormatMaskChanging(string value);
    partial void OnFormatMaskChanged();
    partial void OnStockPosChanging(System.Nullable<byte> value);
    partial void OnStockPosChanged();
    partial void OnBranchPosChanging(System.Nullable<byte> value);
    partial void OnBranchPosChanged();
    #endregion
		
		public Parameter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Parameter", Storage="_Parameter1", DbType="NChar(50)")]
		public string Parameter1
		{
			get
			{
				return this._Parameter1;
			}
			set
			{
				if ((this._Parameter1 != value))
				{
					this.OnParameter1Changing(value);
					this.SendPropertyChanging();
					this._Parameter1 = value;
					this.SendPropertyChanged("Parameter1");
					this.OnParameter1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VNParameter", DbType="NChar(100)")]
		public string VNParameter
		{
			get
			{
				return this._VNParameter;
			}
			set
			{
				if ((this._VNParameter != value))
				{
					this.OnVNParameterChanging(value);
					this.SendPropertyChanging();
					this._VNParameter = value;
					this.SendPropertyChanged("VNParameter");
					this.OnVNParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NChar(2000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FormatMask", DbType="NChar(20)")]
		public string FormatMask
		{
			get
			{
				return this._FormatMask;
			}
			set
			{
				if ((this._FormatMask != value))
				{
					this.OnFormatMaskChanging(value);
					this.SendPropertyChanging();
					this._FormatMask = value;
					this.SendPropertyChanged("FormatMask");
					this.OnFormatMaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockPos", DbType="TinyInt")]
		public System.Nullable<byte> StockPos
		{
			get
			{
				return this._StockPos;
			}
			set
			{
				if ((this._StockPos != value))
				{
					this.OnStockPosChanging(value);
					this.SendPropertyChanging();
					this._StockPos = value;
					this.SendPropertyChanged("StockPos");
					this.OnStockPosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchPos", DbType="TinyInt")]
		public System.Nullable<byte> BranchPos
		{
			get
			{
				return this._BranchPos;
			}
			set
			{
				if ((this._BranchPos != value))
				{
					this.OnBranchPosChanging(value);
					this.SendPropertyChanging();
					this._BranchPos = value;
					this.SendPropertyChanged("BranchPos");
					this.OnBranchPosChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TempBranchFinanceList")]
	public partial class TempBranchFinanceList
	{
		
		private string _Branch;
		
		private int _Id;
		
		private System.Nullable<int> _BranchId;
		
		private System.Nullable<int> _Term;
		
		private System.Nullable<double> _EPSbasic;
		
		private System.Nullable<double> _ZSCORE;
		
		private System.Nullable<double> _ROA;
		
		private System.Nullable<double> _ROE;
		
		private System.Nullable<double> _CurrentRatio;
		
		private System.Nullable<double> _QuickRatio;
		
		private System.Nullable<double> _AssetTurnover;
		
		private System.Nullable<double> _InventoryDays;
		
		private System.Nullable<double> _AverageCollectionPeriod;
		
		private System.Nullable<double> _CashRevenue;
		
		private System.Nullable<double> _FixedAssetTurnover;
		
		private System.Nullable<double> _TargetWorkingCapitalRevenue;
		
		private System.Nullable<double> _TargetnoncashWorkingCapitalRevenue;
		
		private System.Nullable<double> _TargetlongtermDebtRevenue;
		
		private System.Nullable<double> _DebtRatio;
		
		private System.Nullable<double> _AbilitypayInterest;
		
		private System.Nullable<double> _ROC;
		
		private System.Nullable<double> _ROCE;
		
		private System.Nullable<double> _NetMargins;
		
		private System.Nullable<double> _GrossMargins;
		
		private System.Nullable<double> _EBITSALES;
		
		private System.Nullable<double> _RevenueGrowth;
		
		private System.Nullable<double> _GrowthTargetsNetProfit;
		
		private System.Nullable<double> _GrowthTargetsNOPAT;
		
		private System.Nullable<double> _TargetPATEquity;
		
		private System.Nullable<double> _TargetNOPATTotalAssets;
		
		private System.Nullable<double> _TagetPATTotalAssets;
		
		private System.Nullable<double> _TargetRevenueTotalAssets;
		
		private System.Nullable<double> _AverageTotalAssets;
		
		private System.Nullable<double> _TotalCapitalOwnersAverage;
		
		public TempBranchFinanceList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NChar(500)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this._Branch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this._BranchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="Int")]
		public System.Nullable<int> Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPSbasic", DbType="Float")]
		public System.Nullable<double> EPSbasic
		{
			get
			{
				return this._EPSbasic;
			}
			set
			{
				if ((this._EPSbasic != value))
				{
					this._EPSbasic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZSCORE", DbType="Float")]
		public System.Nullable<double> ZSCORE
		{
			get
			{
				return this._ZSCORE;
			}
			set
			{
				if ((this._ZSCORE != value))
				{
					this._ZSCORE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROA", DbType="Float")]
		public System.Nullable<double> ROA
		{
			get
			{
				return this._ROA;
			}
			set
			{
				if ((this._ROA != value))
				{
					this._ROA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROE", DbType="Float")]
		public System.Nullable<double> ROE
		{
			get
			{
				return this._ROE;
			}
			set
			{
				if ((this._ROE != value))
				{
					this._ROE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentRatio", DbType="Float")]
		public System.Nullable<double> CurrentRatio
		{
			get
			{
				return this._CurrentRatio;
			}
			set
			{
				if ((this._CurrentRatio != value))
				{
					this._CurrentRatio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickRatio", DbType="Float")]
		public System.Nullable<double> QuickRatio
		{
			get
			{
				return this._QuickRatio;
			}
			set
			{
				if ((this._QuickRatio != value))
				{
					this._QuickRatio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTurnover", DbType="Float")]
		public System.Nullable<double> AssetTurnover
		{
			get
			{
				return this._AssetTurnover;
			}
			set
			{
				if ((this._AssetTurnover != value))
				{
					this._AssetTurnover = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDays", DbType="Float")]
		public System.Nullable<double> InventoryDays
		{
			get
			{
				return this._InventoryDays;
			}
			set
			{
				if ((this._InventoryDays != value))
				{
					this._InventoryDays = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageCollectionPeriod", DbType="Float")]
		public System.Nullable<double> AverageCollectionPeriod
		{
			get
			{
				return this._AverageCollectionPeriod;
			}
			set
			{
				if ((this._AverageCollectionPeriod != value))
				{
					this._AverageCollectionPeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CashRevenue", DbType="Float")]
		public System.Nullable<double> CashRevenue
		{
			get
			{
				return this._CashRevenue;
			}
			set
			{
				if ((this._CashRevenue != value))
				{
					this._CashRevenue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedAssetTurnover", DbType="Float")]
		public System.Nullable<double> FixedAssetTurnover
		{
			get
			{
				return this._FixedAssetTurnover;
			}
			set
			{
				if ((this._FixedAssetTurnover != value))
				{
					this._FixedAssetTurnover = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetWorkingCapitalRevenue", DbType="Float")]
		public System.Nullable<double> TargetWorkingCapitalRevenue
		{
			get
			{
				return this._TargetWorkingCapitalRevenue;
			}
			set
			{
				if ((this._TargetWorkingCapitalRevenue != value))
				{
					this._TargetWorkingCapitalRevenue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetnoncashWorkingCapitalRevenue", DbType="Float")]
		public System.Nullable<double> TargetnoncashWorkingCapitalRevenue
		{
			get
			{
				return this._TargetnoncashWorkingCapitalRevenue;
			}
			set
			{
				if ((this._TargetnoncashWorkingCapitalRevenue != value))
				{
					this._TargetnoncashWorkingCapitalRevenue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetlongtermDebtRevenue", DbType="Float")]
		public System.Nullable<double> TargetlongtermDebtRevenue
		{
			get
			{
				return this._TargetlongtermDebtRevenue;
			}
			set
			{
				if ((this._TargetlongtermDebtRevenue != value))
				{
					this._TargetlongtermDebtRevenue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebtRatio", DbType="Float")]
		public System.Nullable<double> DebtRatio
		{
			get
			{
				return this._DebtRatio;
			}
			set
			{
				if ((this._DebtRatio != value))
				{
					this._DebtRatio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbilitypayInterest", DbType="Float")]
		public System.Nullable<double> AbilitypayInterest
		{
			get
			{
				return this._AbilitypayInterest;
			}
			set
			{
				if ((this._AbilitypayInterest != value))
				{
					this._AbilitypayInterest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROC", DbType="Float")]
		public System.Nullable<double> ROC
		{
			get
			{
				return this._ROC;
			}
			set
			{
				if ((this._ROC != value))
				{
					this._ROC = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROCE", DbType="Float")]
		public System.Nullable<double> ROCE
		{
			get
			{
				return this._ROCE;
			}
			set
			{
				if ((this._ROCE != value))
				{
					this._ROCE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetMargins", DbType="Float")]
		public System.Nullable<double> NetMargins
		{
			get
			{
				return this._NetMargins;
			}
			set
			{
				if ((this._NetMargins != value))
				{
					this._NetMargins = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossMargins", DbType="Float")]
		public System.Nullable<double> GrossMargins
		{
			get
			{
				return this._GrossMargins;
			}
			set
			{
				if ((this._GrossMargins != value))
				{
					this._GrossMargins = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EBITSALES", DbType="Float")]
		public System.Nullable<double> EBITSALES
		{
			get
			{
				return this._EBITSALES;
			}
			set
			{
				if ((this._EBITSALES != value))
				{
					this._EBITSALES = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RevenueGrowth", DbType="Float")]
		public System.Nullable<double> RevenueGrowth
		{
			get
			{
				return this._RevenueGrowth;
			}
			set
			{
				if ((this._RevenueGrowth != value))
				{
					this._RevenueGrowth = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrowthTargetsNetProfit", DbType="Float")]
		public System.Nullable<double> GrowthTargetsNetProfit
		{
			get
			{
				return this._GrowthTargetsNetProfit;
			}
			set
			{
				if ((this._GrowthTargetsNetProfit != value))
				{
					this._GrowthTargetsNetProfit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrowthTargetsNOPAT", DbType="Float")]
		public System.Nullable<double> GrowthTargetsNOPAT
		{
			get
			{
				return this._GrowthTargetsNOPAT;
			}
			set
			{
				if ((this._GrowthTargetsNOPAT != value))
				{
					this._GrowthTargetsNOPAT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetPATEquity", DbType="Float")]
		public System.Nullable<double> TargetPATEquity
		{
			get
			{
				return this._TargetPATEquity;
			}
			set
			{
				if ((this._TargetPATEquity != value))
				{
					this._TargetPATEquity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetNOPATTotalAssets", DbType="Float")]
		public System.Nullable<double> TargetNOPATTotalAssets
		{
			get
			{
				return this._TargetNOPATTotalAssets;
			}
			set
			{
				if ((this._TargetNOPATTotalAssets != value))
				{
					this._TargetNOPATTotalAssets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TagetPATTotalAssets", DbType="Float")]
		public System.Nullable<double> TagetPATTotalAssets
		{
			get
			{
				return this._TagetPATTotalAssets;
			}
			set
			{
				if ((this._TagetPATTotalAssets != value))
				{
					this._TagetPATTotalAssets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetRevenueTotalAssets", DbType="Float")]
		public System.Nullable<double> TargetRevenueTotalAssets
		{
			get
			{
				return this._TargetRevenueTotalAssets;
			}
			set
			{
				if ((this._TargetRevenueTotalAssets != value))
				{
					this._TargetRevenueTotalAssets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AverageTotalAssets", DbType="Float")]
		public System.Nullable<double> AverageTotalAssets
		{
			get
			{
				return this._AverageTotalAssets;
			}
			set
			{
				if ((this._AverageTotalAssets != value))
				{
					this._AverageTotalAssets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCapitalOwnersAverage", DbType="Float")]
		public System.Nullable<double> TotalCapitalOwnersAverage
		{
			get
			{
				return this._TotalCapitalOwnersAverage;
			}
			set
			{
				if ((this._TotalCapitalOwnersAverage != value))
				{
					this._TotalCapitalOwnersAverage = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TempStockFinanceList")]
	public partial class TempStockFinanceList
	{
		
		private string _Stock;
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<int> _Term;
		
		private System.Nullable<double> _Revenue;
		
		private System.Nullable<double> _CostGoodsSold;
		
		private System.Nullable<double> _GrossProfit;
		
		private System.Nullable<double> _BusinessProfit;
		
		private System.Nullable<double> _FinanceProfit;
		
		private System.Nullable<double> _InterestExpenses;
		
		private System.Nullable<double> _PBTI;
		
		private System.Nullable<double> _Tax;
		
		private System.Nullable<double> _NetIncome;
		
		private System.Nullable<double> _ProfitShareholders;
		
		private System.Nullable<double> _TotalAssets;
		
		private System.Nullable<double> _Assets;
		
		private System.Nullable<double> _ShortFinancialInvestments;
		
		private System.Nullable<double> _Inventory;
		
		private System.Nullable<double> _FixedAssets;
		
		private System.Nullable<double> _LongAssets;
		
		private System.Nullable<double> _ShortDebt;
		
		private System.Nullable<double> _LongDebt;
		
		private System.Nullable<double> _OwnerEquity;
		
		private System.Nullable<double> _ProfitsNotDistributed;
		
		private System.Nullable<double> _PB;
		
		private System.Nullable<double> _PriceBooks;
		
		private System.Nullable<double> _EPSBasic;
		
		private System.Nullable<double> _EPSAdj;
		
		private System.Nullable<double> _Beta;
		
		private System.Nullable<double> _ZScore;
		
		private System.Nullable<double> _DividendRate;
		
		private System.Nullable<double> _ROA;
		
		private System.Nullable<double> _ROE;
		
		private System.Nullable<double> _GrossProfitRate;
		
		private System.Nullable<double> _PBTRate;
		
		private System.Nullable<double> _PATRate;
		
		private System.Nullable<double> _CurrentRatio;
		
		private System.Nullable<double> _QuickRatio;
		
		private System.Nullable<double> _EquityLoans;
		
		private System.Nullable<double> _LongDebtEquity;
		
		private System.Nullable<double> _InventoryTurnaround;
		
		private System.Nullable<double> _AssetTurnover;
		
		private System.Nullable<double> _InterestCoverageRatio;
		
		private System.Nullable<double> _PEBasic;
		
		private System.Nullable<double> _PEAdj;
		
		private System.Nullable<double> _PBPricePerBook;
		
		private System.Nullable<double> _InventoryDays;
		
		public TempStockFinanceList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this._Stock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this._StockId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="Int")]
		public System.Nullable<int> Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revenue", DbType="Float")]
		public System.Nullable<double> Revenue
		{
			get
			{
				return this._Revenue;
			}
			set
			{
				if ((this._Revenue != value))
				{
					this._Revenue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostGoodsSold", DbType="Float")]
		public System.Nullable<double> CostGoodsSold
		{
			get
			{
				return this._CostGoodsSold;
			}
			set
			{
				if ((this._CostGoodsSold != value))
				{
					this._CostGoodsSold = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossProfit", DbType="Float")]
		public System.Nullable<double> GrossProfit
		{
			get
			{
				return this._GrossProfit;
			}
			set
			{
				if ((this._GrossProfit != value))
				{
					this._GrossProfit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessProfit", DbType="Float")]
		public System.Nullable<double> BusinessProfit
		{
			get
			{
				return this._BusinessProfit;
			}
			set
			{
				if ((this._BusinessProfit != value))
				{
					this._BusinessProfit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceProfit", DbType="Float")]
		public System.Nullable<double> FinanceProfit
		{
			get
			{
				return this._FinanceProfit;
			}
			set
			{
				if ((this._FinanceProfit != value))
				{
					this._FinanceProfit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestExpenses", DbType="Float")]
		public System.Nullable<double> InterestExpenses
		{
			get
			{
				return this._InterestExpenses;
			}
			set
			{
				if ((this._InterestExpenses != value))
				{
					this._InterestExpenses = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBTI", DbType="Float")]
		public System.Nullable<double> PBTI
		{
			get
			{
				return this._PBTI;
			}
			set
			{
				if ((this._PBTI != value))
				{
					this._PBTI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Float")]
		public System.Nullable<double> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this._Tax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetIncome", DbType="Float")]
		public System.Nullable<double> NetIncome
		{
			get
			{
				return this._NetIncome;
			}
			set
			{
				if ((this._NetIncome != value))
				{
					this._NetIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitShareholders", DbType="Float")]
		public System.Nullable<double> ProfitShareholders
		{
			get
			{
				return this._ProfitShareholders;
			}
			set
			{
				if ((this._ProfitShareholders != value))
				{
					this._ProfitShareholders = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAssets", DbType="Float")]
		public System.Nullable<double> TotalAssets
		{
			get
			{
				return this._TotalAssets;
			}
			set
			{
				if ((this._TotalAssets != value))
				{
					this._TotalAssets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assets", DbType="Float")]
		public System.Nullable<double> Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				if ((this._Assets != value))
				{
					this._Assets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortFinancialInvestments", DbType="Float")]
		public System.Nullable<double> ShortFinancialInvestments
		{
			get
			{
				return this._ShortFinancialInvestments;
			}
			set
			{
				if ((this._ShortFinancialInvestments != value))
				{
					this._ShortFinancialInvestments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inventory", DbType="Float")]
		public System.Nullable<double> Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				if ((this._Inventory != value))
				{
					this._Inventory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedAssets", DbType="Float")]
		public System.Nullable<double> FixedAssets
		{
			get
			{
				return this._FixedAssets;
			}
			set
			{
				if ((this._FixedAssets != value))
				{
					this._FixedAssets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongAssets", DbType="Float")]
		public System.Nullable<double> LongAssets
		{
			get
			{
				return this._LongAssets;
			}
			set
			{
				if ((this._LongAssets != value))
				{
					this._LongAssets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDebt", DbType="Float")]
		public System.Nullable<double> ShortDebt
		{
			get
			{
				return this._ShortDebt;
			}
			set
			{
				if ((this._ShortDebt != value))
				{
					this._ShortDebt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDebt", DbType="Float")]
		public System.Nullable<double> LongDebt
		{
			get
			{
				return this._LongDebt;
			}
			set
			{
				if ((this._LongDebt != value))
				{
					this._LongDebt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerEquity", DbType="Float")]
		public System.Nullable<double> OwnerEquity
		{
			get
			{
				return this._OwnerEquity;
			}
			set
			{
				if ((this._OwnerEquity != value))
				{
					this._OwnerEquity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitsNotDistributed", DbType="Float")]
		public System.Nullable<double> ProfitsNotDistributed
		{
			get
			{
				return this._ProfitsNotDistributed;
			}
			set
			{
				if ((this._ProfitsNotDistributed != value))
				{
					this._ProfitsNotDistributed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PB", DbType="Float")]
		public System.Nullable<double> PB
		{
			get
			{
				return this._PB;
			}
			set
			{
				if ((this._PB != value))
				{
					this._PB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBooks", DbType="Float")]
		public System.Nullable<double> PriceBooks
		{
			get
			{
				return this._PriceBooks;
			}
			set
			{
				if ((this._PriceBooks != value))
				{
					this._PriceBooks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPSBasic", DbType="Float")]
		public System.Nullable<double> EPSBasic
		{
			get
			{
				return this._EPSBasic;
			}
			set
			{
				if ((this._EPSBasic != value))
				{
					this._EPSBasic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPSAdj", DbType="Float")]
		public System.Nullable<double> EPSAdj
		{
			get
			{
				return this._EPSAdj;
			}
			set
			{
				if ((this._EPSAdj != value))
				{
					this._EPSAdj = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beta", DbType="Float")]
		public System.Nullable<double> Beta
		{
			get
			{
				return this._Beta;
			}
			set
			{
				if ((this._Beta != value))
				{
					this._Beta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZScore", DbType="Float")]
		public System.Nullable<double> ZScore
		{
			get
			{
				return this._ZScore;
			}
			set
			{
				if ((this._ZScore != value))
				{
					this._ZScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DividendRate", DbType="Float")]
		public System.Nullable<double> DividendRate
		{
			get
			{
				return this._DividendRate;
			}
			set
			{
				if ((this._DividendRate != value))
				{
					this._DividendRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROA", DbType="Float")]
		public System.Nullable<double> ROA
		{
			get
			{
				return this._ROA;
			}
			set
			{
				if ((this._ROA != value))
				{
					this._ROA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROE", DbType="Float")]
		public System.Nullable<double> ROE
		{
			get
			{
				return this._ROE;
			}
			set
			{
				if ((this._ROE != value))
				{
					this._ROE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossProfitRate", DbType="Float")]
		public System.Nullable<double> GrossProfitRate
		{
			get
			{
				return this._GrossProfitRate;
			}
			set
			{
				if ((this._GrossProfitRate != value))
				{
					this._GrossProfitRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBTRate", DbType="Float")]
		public System.Nullable<double> PBTRate
		{
			get
			{
				return this._PBTRate;
			}
			set
			{
				if ((this._PBTRate != value))
				{
					this._PBTRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PATRate", DbType="Float")]
		public System.Nullable<double> PATRate
		{
			get
			{
				return this._PATRate;
			}
			set
			{
				if ((this._PATRate != value))
				{
					this._PATRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentRatio", DbType="Float")]
		public System.Nullable<double> CurrentRatio
		{
			get
			{
				return this._CurrentRatio;
			}
			set
			{
				if ((this._CurrentRatio != value))
				{
					this._CurrentRatio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickRatio", DbType="Float")]
		public System.Nullable<double> QuickRatio
		{
			get
			{
				return this._QuickRatio;
			}
			set
			{
				if ((this._QuickRatio != value))
				{
					this._QuickRatio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquityLoans", DbType="Float")]
		public System.Nullable<double> EquityLoans
		{
			get
			{
				return this._EquityLoans;
			}
			set
			{
				if ((this._EquityLoans != value))
				{
					this._EquityLoans = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDebtEquity", DbType="Float")]
		public System.Nullable<double> LongDebtEquity
		{
			get
			{
				return this._LongDebtEquity;
			}
			set
			{
				if ((this._LongDebtEquity != value))
				{
					this._LongDebtEquity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryTurnaround", DbType="Float")]
		public System.Nullable<double> InventoryTurnaround
		{
			get
			{
				return this._InventoryTurnaround;
			}
			set
			{
				if ((this._InventoryTurnaround != value))
				{
					this._InventoryTurnaround = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTurnover", DbType="Float")]
		public System.Nullable<double> AssetTurnover
		{
			get
			{
				return this._AssetTurnover;
			}
			set
			{
				if ((this._AssetTurnover != value))
				{
					this._AssetTurnover = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestCoverageRatio", DbType="Float")]
		public System.Nullable<double> InterestCoverageRatio
		{
			get
			{
				return this._InterestCoverageRatio;
			}
			set
			{
				if ((this._InterestCoverageRatio != value))
				{
					this._InterestCoverageRatio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEBasic", DbType="Float")]
		public System.Nullable<double> PEBasic
		{
			get
			{
				return this._PEBasic;
			}
			set
			{
				if ((this._PEBasic != value))
				{
					this._PEBasic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEAdj", DbType="Float")]
		public System.Nullable<double> PEAdj
		{
			get
			{
				return this._PEAdj;
			}
			set
			{
				if ((this._PEAdj != value))
				{
					this._PEAdj = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBPricePerBook", DbType="Float")]
		public System.Nullable<double> PBPricePerBook
		{
			get
			{
				return this._PBPricePerBook;
			}
			set
			{
				if ((this._PBPricePerBook != value))
				{
					this._PBPricePerBook = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDays", DbType="Float")]
		public System.Nullable<double> InventoryDays
		{
			get
			{
				return this._InventoryDays;
			}
			set
			{
				if ((this._InventoryDays != value))
				{
					this._InventoryDays = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.FinanceValue")]
	public partial class FinanceValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<int> _Term;
		
		private System.Nullable<double> _Revenue;
		
		private System.Nullable<double> _CostGoodsSold;
		
		private System.Nullable<double> _GrossProfit;
		
		private System.Nullable<double> _BusinessProfit;
		
		private System.Nullable<double> _FinanceProfit;
		
		private System.Nullable<double> _InterestExpenses;
		
		private System.Nullable<double> _PBTI;
		
		private System.Nullable<double> _Tax;
		
		private System.Nullable<double> _NetIncome;
		
		private System.Nullable<double> _ProfitShareholders;
		
		private System.Nullable<double> _TotalAssets;
		
		private System.Nullable<double> _Assets;
		
		private System.Nullable<double> _ShortFinancialInvestments;
		
		private System.Nullable<double> _Inventory;
		
		private System.Nullable<double> _FixedAssets;
		
		private System.Nullable<double> _LongAssets;
		
		private System.Nullable<double> _LongFinanceInvest;
		
		private System.Nullable<double> _ShortDebt;
		
		private System.Nullable<double> _LongDebt;
		
		private System.Nullable<double> _OwnerEquity;
		
		private System.Nullable<double> _ProfitsNotDistributed;
		
		private System.Nullable<double> _PB;
		
		private System.Nullable<double> _PriceBooks;
		
		private System.Nullable<double> _EPSBasic;
		
		private System.Nullable<double> _EPSAdj;
		
		private System.Nullable<double> _Beta;
		
		private System.Nullable<double> _ZScore;
		
		private System.Nullable<double> _DividendRate;
		
		private System.Nullable<double> _ROA;
		
		private System.Nullable<double> _ROE;
		
		private System.Nullable<double> _GrossProfitRate;
		
		private System.Nullable<double> _PBTRate;
		
		private System.Nullable<double> _PATRate;
		
		private System.Nullable<double> _CurrentRatio;
		
		private System.Nullable<double> _QuickRatio;
		
		private System.Nullable<double> _EquityLoans;
		
		private System.Nullable<double> _LongDebtEquity;
		
		private System.Nullable<double> _InventoryTurnaround;
		
		private System.Nullable<double> _AssetTurnover;
		
		private System.Nullable<double> _InterestCoverageRatio;
		
		private System.Nullable<double> _PEBasic;
		
		private System.Nullable<double> _PEAdj;
		
		private System.Nullable<double> _PBPricePerBook;
		
		private System.Nullable<double> _InventoryDays;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockIdChanging(System.Nullable<int> value);
    partial void OnStockIdChanged();
    partial void OnTermChanging(System.Nullable<int> value);
    partial void OnTermChanged();
    partial void OnRevenueChanging(System.Nullable<double> value);
    partial void OnRevenueChanged();
    partial void OnCostGoodsSoldChanging(System.Nullable<double> value);
    partial void OnCostGoodsSoldChanged();
    partial void OnGrossProfitChanging(System.Nullable<double> value);
    partial void OnGrossProfitChanged();
    partial void OnBusinessProfitChanging(System.Nullable<double> value);
    partial void OnBusinessProfitChanged();
    partial void OnFinanceProfitChanging(System.Nullable<double> value);
    partial void OnFinanceProfitChanged();
    partial void OnInterestExpensesChanging(System.Nullable<double> value);
    partial void OnInterestExpensesChanged();
    partial void OnPBTIChanging(System.Nullable<double> value);
    partial void OnPBTIChanged();
    partial void OnTaxChanging(System.Nullable<double> value);
    partial void OnTaxChanged();
    partial void OnNetIncomeChanging(System.Nullable<double> value);
    partial void OnNetIncomeChanged();
    partial void OnProfitShareholdersChanging(System.Nullable<double> value);
    partial void OnProfitShareholdersChanged();
    partial void OnTotalAssetsChanging(System.Nullable<double> value);
    partial void OnTotalAssetsChanged();
    partial void OnAssetsChanging(System.Nullable<double> value);
    partial void OnAssetsChanged();
    partial void OnShortFinancialInvestmentsChanging(System.Nullable<double> value);
    partial void OnShortFinancialInvestmentsChanged();
    partial void OnInventoryChanging(System.Nullable<double> value);
    partial void OnInventoryChanged();
    partial void OnFixedAssetsChanging(System.Nullable<double> value);
    partial void OnFixedAssetsChanged();
    partial void OnLongAssetsChanging(System.Nullable<double> value);
    partial void OnLongAssetsChanged();
    partial void OnLongFinanceInvestChanging(System.Nullable<double> value);
    partial void OnLongFinanceInvestChanged();
    partial void OnShortDebtChanging(System.Nullable<double> value);
    partial void OnShortDebtChanged();
    partial void OnLongDebtChanging(System.Nullable<double> value);
    partial void OnLongDebtChanged();
    partial void OnOwnerEquityChanging(System.Nullable<double> value);
    partial void OnOwnerEquityChanged();
    partial void OnProfitsNotDistributedChanging(System.Nullable<double> value);
    partial void OnProfitsNotDistributedChanged();
    partial void OnPBChanging(System.Nullable<double> value);
    partial void OnPBChanged();
    partial void OnPriceBooksChanging(System.Nullable<double> value);
    partial void OnPriceBooksChanged();
    partial void OnEPSBasicChanging(System.Nullable<double> value);
    partial void OnEPSBasicChanged();
    partial void OnEPSAdjChanging(System.Nullable<double> value);
    partial void OnEPSAdjChanged();
    partial void OnBetaChanging(System.Nullable<double> value);
    partial void OnBetaChanged();
    partial void OnZScoreChanging(System.Nullable<double> value);
    partial void OnZScoreChanged();
    partial void OnDividendRateChanging(System.Nullable<double> value);
    partial void OnDividendRateChanged();
    partial void OnROAChanging(System.Nullable<double> value);
    partial void OnROAChanged();
    partial void OnROEChanging(System.Nullable<double> value);
    partial void OnROEChanged();
    partial void OnGrossProfitRateChanging(System.Nullable<double> value);
    partial void OnGrossProfitRateChanged();
    partial void OnPBTRateChanging(System.Nullable<double> value);
    partial void OnPBTRateChanged();
    partial void OnPATRateChanging(System.Nullable<double> value);
    partial void OnPATRateChanged();
    partial void OnCurrentRatioChanging(System.Nullable<double> value);
    partial void OnCurrentRatioChanged();
    partial void OnQuickRatioChanging(System.Nullable<double> value);
    partial void OnQuickRatioChanged();
    partial void OnEquityLoansChanging(System.Nullable<double> value);
    partial void OnEquityLoansChanged();
    partial void OnLongDebtEquityChanging(System.Nullable<double> value);
    partial void OnLongDebtEquityChanged();
    partial void OnInventoryTurnaroundChanging(System.Nullable<double> value);
    partial void OnInventoryTurnaroundChanged();
    partial void OnAssetTurnoverChanging(System.Nullable<double> value);
    partial void OnAssetTurnoverChanged();
    partial void OnInterestCoverageRatioChanging(System.Nullable<double> value);
    partial void OnInterestCoverageRatioChanged();
    partial void OnPEBasicChanging(System.Nullable<double> value);
    partial void OnPEBasicChanged();
    partial void OnPEAdjChanging(System.Nullable<double> value);
    partial void OnPEAdjChanged();
    partial void OnPBPricePerBookChanging(System.Nullable<double> value);
    partial void OnPBPricePerBookChanged();
    partial void OnInventoryDaysChanging(System.Nullable<double> value);
    partial void OnInventoryDaysChanged();
    #endregion
		
		public FinanceValue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this.OnStockIdChanging(value);
					this.SendPropertyChanging();
					this._StockId = value;
					this.SendPropertyChanged("StockId");
					this.OnStockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="Int")]
		public System.Nullable<int> Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this.OnTermChanging(value);
					this.SendPropertyChanging();
					this._Term = value;
					this.SendPropertyChanged("Term");
					this.OnTermChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revenue", DbType="Float")]
		public System.Nullable<double> Revenue
		{
			get
			{
				return this._Revenue;
			}
			set
			{
				if ((this._Revenue != value))
				{
					this.OnRevenueChanging(value);
					this.SendPropertyChanging();
					this._Revenue = value;
					this.SendPropertyChanged("Revenue");
					this.OnRevenueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostGoodsSold", DbType="Float")]
		public System.Nullable<double> CostGoodsSold
		{
			get
			{
				return this._CostGoodsSold;
			}
			set
			{
				if ((this._CostGoodsSold != value))
				{
					this.OnCostGoodsSoldChanging(value);
					this.SendPropertyChanging();
					this._CostGoodsSold = value;
					this.SendPropertyChanged("CostGoodsSold");
					this.OnCostGoodsSoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossProfit", DbType="Float")]
		public System.Nullable<double> GrossProfit
		{
			get
			{
				return this._GrossProfit;
			}
			set
			{
				if ((this._GrossProfit != value))
				{
					this.OnGrossProfitChanging(value);
					this.SendPropertyChanging();
					this._GrossProfit = value;
					this.SendPropertyChanged("GrossProfit");
					this.OnGrossProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessProfit", DbType="Float")]
		public System.Nullable<double> BusinessProfit
		{
			get
			{
				return this._BusinessProfit;
			}
			set
			{
				if ((this._BusinessProfit != value))
				{
					this.OnBusinessProfitChanging(value);
					this.SendPropertyChanging();
					this._BusinessProfit = value;
					this.SendPropertyChanged("BusinessProfit");
					this.OnBusinessProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceProfit", DbType="Float")]
		public System.Nullable<double> FinanceProfit
		{
			get
			{
				return this._FinanceProfit;
			}
			set
			{
				if ((this._FinanceProfit != value))
				{
					this.OnFinanceProfitChanging(value);
					this.SendPropertyChanging();
					this._FinanceProfit = value;
					this.SendPropertyChanged("FinanceProfit");
					this.OnFinanceProfitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestExpenses", DbType="Float")]
		public System.Nullable<double> InterestExpenses
		{
			get
			{
				return this._InterestExpenses;
			}
			set
			{
				if ((this._InterestExpenses != value))
				{
					this.OnInterestExpensesChanging(value);
					this.SendPropertyChanging();
					this._InterestExpenses = value;
					this.SendPropertyChanged("InterestExpenses");
					this.OnInterestExpensesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBTI", DbType="Float")]
		public System.Nullable<double> PBTI
		{
			get
			{
				return this._PBTI;
			}
			set
			{
				if ((this._PBTI != value))
				{
					this.OnPBTIChanging(value);
					this.SendPropertyChanging();
					this._PBTI = value;
					this.SendPropertyChanged("PBTI");
					this.OnPBTIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Float")]
		public System.Nullable<double> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this.OnTaxChanging(value);
					this.SendPropertyChanging();
					this._Tax = value;
					this.SendPropertyChanged("Tax");
					this.OnTaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetIncome", DbType="Float")]
		public System.Nullable<double> NetIncome
		{
			get
			{
				return this._NetIncome;
			}
			set
			{
				if ((this._NetIncome != value))
				{
					this.OnNetIncomeChanging(value);
					this.SendPropertyChanging();
					this._NetIncome = value;
					this.SendPropertyChanged("NetIncome");
					this.OnNetIncomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitShareholders", DbType="Float")]
		public System.Nullable<double> ProfitShareholders
		{
			get
			{
				return this._ProfitShareholders;
			}
			set
			{
				if ((this._ProfitShareholders != value))
				{
					this.OnProfitShareholdersChanging(value);
					this.SendPropertyChanging();
					this._ProfitShareholders = value;
					this.SendPropertyChanged("ProfitShareholders");
					this.OnProfitShareholdersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAssets", DbType="Float")]
		public System.Nullable<double> TotalAssets
		{
			get
			{
				return this._TotalAssets;
			}
			set
			{
				if ((this._TotalAssets != value))
				{
					this.OnTotalAssetsChanging(value);
					this.SendPropertyChanging();
					this._TotalAssets = value;
					this.SendPropertyChanged("TotalAssets");
					this.OnTotalAssetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assets", DbType="Float")]
		public System.Nullable<double> Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				if ((this._Assets != value))
				{
					this.OnAssetsChanging(value);
					this.SendPropertyChanging();
					this._Assets = value;
					this.SendPropertyChanged("Assets");
					this.OnAssetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortFinancialInvestments", DbType="Float")]
		public System.Nullable<double> ShortFinancialInvestments
		{
			get
			{
				return this._ShortFinancialInvestments;
			}
			set
			{
				if ((this._ShortFinancialInvestments != value))
				{
					this.OnShortFinancialInvestmentsChanging(value);
					this.SendPropertyChanging();
					this._ShortFinancialInvestments = value;
					this.SendPropertyChanged("ShortFinancialInvestments");
					this.OnShortFinancialInvestmentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inventory", DbType="Float")]
		public System.Nullable<double> Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				if ((this._Inventory != value))
				{
					this.OnInventoryChanging(value);
					this.SendPropertyChanging();
					this._Inventory = value;
					this.SendPropertyChanged("Inventory");
					this.OnInventoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedAssets", DbType="Float")]
		public System.Nullable<double> FixedAssets
		{
			get
			{
				return this._FixedAssets;
			}
			set
			{
				if ((this._FixedAssets != value))
				{
					this.OnFixedAssetsChanging(value);
					this.SendPropertyChanging();
					this._FixedAssets = value;
					this.SendPropertyChanged("FixedAssets");
					this.OnFixedAssetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongAssets", DbType="Float")]
		public System.Nullable<double> LongAssets
		{
			get
			{
				return this._LongAssets;
			}
			set
			{
				if ((this._LongAssets != value))
				{
					this.OnLongAssetsChanging(value);
					this.SendPropertyChanging();
					this._LongAssets = value;
					this.SendPropertyChanged("LongAssets");
					this.OnLongAssetsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongFinanceInvest", DbType="Float")]
		public System.Nullable<double> LongFinanceInvest
		{
			get
			{
				return this._LongFinanceInvest;
			}
			set
			{
				if ((this._LongFinanceInvest != value))
				{
					this.OnLongFinanceInvestChanging(value);
					this.SendPropertyChanging();
					this._LongFinanceInvest = value;
					this.SendPropertyChanged("LongFinanceInvest");
					this.OnLongFinanceInvestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDebt", DbType="Float")]
		public System.Nullable<double> ShortDebt
		{
			get
			{
				return this._ShortDebt;
			}
			set
			{
				if ((this._ShortDebt != value))
				{
					this.OnShortDebtChanging(value);
					this.SendPropertyChanging();
					this._ShortDebt = value;
					this.SendPropertyChanged("ShortDebt");
					this.OnShortDebtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDebt", DbType="Float")]
		public System.Nullable<double> LongDebt
		{
			get
			{
				return this._LongDebt;
			}
			set
			{
				if ((this._LongDebt != value))
				{
					this.OnLongDebtChanging(value);
					this.SendPropertyChanging();
					this._LongDebt = value;
					this.SendPropertyChanged("LongDebt");
					this.OnLongDebtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerEquity", DbType="Float")]
		public System.Nullable<double> OwnerEquity
		{
			get
			{
				return this._OwnerEquity;
			}
			set
			{
				if ((this._OwnerEquity != value))
				{
					this.OnOwnerEquityChanging(value);
					this.SendPropertyChanging();
					this._OwnerEquity = value;
					this.SendPropertyChanged("OwnerEquity");
					this.OnOwnerEquityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitsNotDistributed", DbType="Float")]
		public System.Nullable<double> ProfitsNotDistributed
		{
			get
			{
				return this._ProfitsNotDistributed;
			}
			set
			{
				if ((this._ProfitsNotDistributed != value))
				{
					this.OnProfitsNotDistributedChanging(value);
					this.SendPropertyChanging();
					this._ProfitsNotDistributed = value;
					this.SendPropertyChanged("ProfitsNotDistributed");
					this.OnProfitsNotDistributedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PB", DbType="Float")]
		public System.Nullable<double> PB
		{
			get
			{
				return this._PB;
			}
			set
			{
				if ((this._PB != value))
				{
					this.OnPBChanging(value);
					this.SendPropertyChanging();
					this._PB = value;
					this.SendPropertyChanged("PB");
					this.OnPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBooks", DbType="Float")]
		public System.Nullable<double> PriceBooks
		{
			get
			{
				return this._PriceBooks;
			}
			set
			{
				if ((this._PriceBooks != value))
				{
					this.OnPriceBooksChanging(value);
					this.SendPropertyChanging();
					this._PriceBooks = value;
					this.SendPropertyChanged("PriceBooks");
					this.OnPriceBooksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPSBasic", DbType="Float")]
		public System.Nullable<double> EPSBasic
		{
			get
			{
				return this._EPSBasic;
			}
			set
			{
				if ((this._EPSBasic != value))
				{
					this.OnEPSBasicChanging(value);
					this.SendPropertyChanging();
					this._EPSBasic = value;
					this.SendPropertyChanged("EPSBasic");
					this.OnEPSBasicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPSAdj", DbType="Float")]
		public System.Nullable<double> EPSAdj
		{
			get
			{
				return this._EPSAdj;
			}
			set
			{
				if ((this._EPSAdj != value))
				{
					this.OnEPSAdjChanging(value);
					this.SendPropertyChanging();
					this._EPSAdj = value;
					this.SendPropertyChanged("EPSAdj");
					this.OnEPSAdjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beta", DbType="Float")]
		public System.Nullable<double> Beta
		{
			get
			{
				return this._Beta;
			}
			set
			{
				if ((this._Beta != value))
				{
					this.OnBetaChanging(value);
					this.SendPropertyChanging();
					this._Beta = value;
					this.SendPropertyChanged("Beta");
					this.OnBetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZScore", DbType="Float")]
		public System.Nullable<double> ZScore
		{
			get
			{
				return this._ZScore;
			}
			set
			{
				if ((this._ZScore != value))
				{
					this.OnZScoreChanging(value);
					this.SendPropertyChanging();
					this._ZScore = value;
					this.SendPropertyChanged("ZScore");
					this.OnZScoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DividendRate", DbType="Float")]
		public System.Nullable<double> DividendRate
		{
			get
			{
				return this._DividendRate;
			}
			set
			{
				if ((this._DividendRate != value))
				{
					this.OnDividendRateChanging(value);
					this.SendPropertyChanging();
					this._DividendRate = value;
					this.SendPropertyChanged("DividendRate");
					this.OnDividendRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROA", DbType="Float")]
		public System.Nullable<double> ROA
		{
			get
			{
				return this._ROA;
			}
			set
			{
				if ((this._ROA != value))
				{
					this.OnROAChanging(value);
					this.SendPropertyChanging();
					this._ROA = value;
					this.SendPropertyChanged("ROA");
					this.OnROAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROE", DbType="Float")]
		public System.Nullable<double> ROE
		{
			get
			{
				return this._ROE;
			}
			set
			{
				if ((this._ROE != value))
				{
					this.OnROEChanging(value);
					this.SendPropertyChanging();
					this._ROE = value;
					this.SendPropertyChanged("ROE");
					this.OnROEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossProfitRate", DbType="Float")]
		public System.Nullable<double> GrossProfitRate
		{
			get
			{
				return this._GrossProfitRate;
			}
			set
			{
				if ((this._GrossProfitRate != value))
				{
					this.OnGrossProfitRateChanging(value);
					this.SendPropertyChanging();
					this._GrossProfitRate = value;
					this.SendPropertyChanged("GrossProfitRate");
					this.OnGrossProfitRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBTRate", DbType="Float")]
		public System.Nullable<double> PBTRate
		{
			get
			{
				return this._PBTRate;
			}
			set
			{
				if ((this._PBTRate != value))
				{
					this.OnPBTRateChanging(value);
					this.SendPropertyChanging();
					this._PBTRate = value;
					this.SendPropertyChanged("PBTRate");
					this.OnPBTRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PATRate", DbType="Float")]
		public System.Nullable<double> PATRate
		{
			get
			{
				return this._PATRate;
			}
			set
			{
				if ((this._PATRate != value))
				{
					this.OnPATRateChanging(value);
					this.SendPropertyChanging();
					this._PATRate = value;
					this.SendPropertyChanged("PATRate");
					this.OnPATRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentRatio", DbType="Float")]
		public System.Nullable<double> CurrentRatio
		{
			get
			{
				return this._CurrentRatio;
			}
			set
			{
				if ((this._CurrentRatio != value))
				{
					this.OnCurrentRatioChanging(value);
					this.SendPropertyChanging();
					this._CurrentRatio = value;
					this.SendPropertyChanged("CurrentRatio");
					this.OnCurrentRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickRatio", DbType="Float")]
		public System.Nullable<double> QuickRatio
		{
			get
			{
				return this._QuickRatio;
			}
			set
			{
				if ((this._QuickRatio != value))
				{
					this.OnQuickRatioChanging(value);
					this.SendPropertyChanging();
					this._QuickRatio = value;
					this.SendPropertyChanged("QuickRatio");
					this.OnQuickRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquityLoans", DbType="Float")]
		public System.Nullable<double> EquityLoans
		{
			get
			{
				return this._EquityLoans;
			}
			set
			{
				if ((this._EquityLoans != value))
				{
					this.OnEquityLoansChanging(value);
					this.SendPropertyChanging();
					this._EquityLoans = value;
					this.SendPropertyChanged("EquityLoans");
					this.OnEquityLoansChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDebtEquity", DbType="Float")]
		public System.Nullable<double> LongDebtEquity
		{
			get
			{
				return this._LongDebtEquity;
			}
			set
			{
				if ((this._LongDebtEquity != value))
				{
					this.OnLongDebtEquityChanging(value);
					this.SendPropertyChanging();
					this._LongDebtEquity = value;
					this.SendPropertyChanged("LongDebtEquity");
					this.OnLongDebtEquityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryTurnaround", DbType="Float")]
		public System.Nullable<double> InventoryTurnaround
		{
			get
			{
				return this._InventoryTurnaround;
			}
			set
			{
				if ((this._InventoryTurnaround != value))
				{
					this.OnInventoryTurnaroundChanging(value);
					this.SendPropertyChanging();
					this._InventoryTurnaround = value;
					this.SendPropertyChanged("InventoryTurnaround");
					this.OnInventoryTurnaroundChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTurnover", DbType="Float")]
		public System.Nullable<double> AssetTurnover
		{
			get
			{
				return this._AssetTurnover;
			}
			set
			{
				if ((this._AssetTurnover != value))
				{
					this.OnAssetTurnoverChanging(value);
					this.SendPropertyChanging();
					this._AssetTurnover = value;
					this.SendPropertyChanged("AssetTurnover");
					this.OnAssetTurnoverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestCoverageRatio", DbType="Float")]
		public System.Nullable<double> InterestCoverageRatio
		{
			get
			{
				return this._InterestCoverageRatio;
			}
			set
			{
				if ((this._InterestCoverageRatio != value))
				{
					this.OnInterestCoverageRatioChanging(value);
					this.SendPropertyChanging();
					this._InterestCoverageRatio = value;
					this.SendPropertyChanged("InterestCoverageRatio");
					this.OnInterestCoverageRatioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEBasic", DbType="Float")]
		public System.Nullable<double> PEBasic
		{
			get
			{
				return this._PEBasic;
			}
			set
			{
				if ((this._PEBasic != value))
				{
					this.OnPEBasicChanging(value);
					this.SendPropertyChanging();
					this._PEBasic = value;
					this.SendPropertyChanged("PEBasic");
					this.OnPEBasicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEAdj", DbType="Float")]
		public System.Nullable<double> PEAdj
		{
			get
			{
				return this._PEAdj;
			}
			set
			{
				if ((this._PEAdj != value))
				{
					this.OnPEAdjChanging(value);
					this.SendPropertyChanging();
					this._PEAdj = value;
					this.SendPropertyChanged("PEAdj");
					this.OnPEAdjChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBPricePerBook", DbType="Float")]
		public System.Nullable<double> PBPricePerBook
		{
			get
			{
				return this._PBPricePerBook;
			}
			set
			{
				if ((this._PBPricePerBook != value))
				{
					this.OnPBPricePerBookChanging(value);
					this.SendPropertyChanging();
					this._PBPricePerBook = value;
					this.SendPropertyChanged("PBPricePerBook");
					this.OnPBPricePerBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDays", DbType="Float")]
		public System.Nullable<double> InventoryDays
		{
			get
			{
				return this._InventoryDays;
			}
			set
			{
				if ((this._InventoryDays != value))
				{
					this.OnInventoryDaysChanging(value);
					this.SendPropertyChanging();
					this._InventoryDays = value;
					this.SendPropertyChanged("InventoryDays");
					this.OnInventoryDaysChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Definition")]
	public partial class Definition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CodeNum;
		
		private string _Definition1;
		
		private System.Nullable<int> _DefGroupId;
		
		private string _Description;
		
		private System.Nullable<bool> _Bit;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _Num1;
		
		private System.Nullable<int> _Num2;
		
		private EntitySet<Stock> _Stocks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeNumChanging(string value);
    partial void OnCodeNumChanged();
    partial void OnDefinition1Changing(string value);
    partial void OnDefinition1Changed();
    partial void OnDefGroupIdChanging(System.Nullable<int> value);
    partial void OnDefGroupIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBitChanging(System.Nullable<bool> value);
    partial void OnBitChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnNum1Changing(System.Nullable<int> value);
    partial void OnNum1Changed();
    partial void OnNum2Changing(System.Nullable<int> value);
    partial void OnNum2Changed();
    #endregion
		
		public Definition()
		{
			this._Stocks = new EntitySet<Stock>(new Action<Stock>(this.attach_Stocks), new Action<Stock>(this.detach_Stocks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeNum", DbType="NVarChar(100)")]
		public string CodeNum
		{
			get
			{
				return this._CodeNum;
			}
			set
			{
				if ((this._CodeNum != value))
				{
					this.OnCodeNumChanging(value);
					this.SendPropertyChanging();
					this._CodeNum = value;
					this.SendPropertyChanged("CodeNum");
					this.OnCodeNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Definition", Storage="_Definition1", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Definition1
		{
			get
			{
				return this._Definition1;
			}
			set
			{
				if ((this._Definition1 != value))
				{
					this.OnDefinition1Changing(value);
					this.SendPropertyChanging();
					this._Definition1 = value;
					this.SendPropertyChanged("Definition1");
					this.OnDefinition1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefGroupId", DbType="Int")]
		public System.Nullable<int> DefGroupId
		{
			get
			{
				return this._DefGroupId;
			}
			set
			{
				if ((this._DefGroupId != value))
				{
					this.OnDefGroupIdChanging(value);
					this.SendPropertyChanging();
					this._DefGroupId = value;
					this.SendPropertyChanged("DefGroupId");
					this.OnDefGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bit", DbType="Bit")]
		public System.Nullable<bool> Bit
		{
			get
			{
				return this._Bit;
			}
			set
			{
				if ((this._Bit != value))
				{
					this.OnBitChanging(value);
					this.SendPropertyChanging();
					this._Bit = value;
					this.SendPropertyChanged("Bit");
					this.OnBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num1", DbType="Int")]
		public System.Nullable<int> Num1
		{
			get
			{
				return this._Num1;
			}
			set
			{
				if ((this._Num1 != value))
				{
					this.OnNum1Changing(value);
					this.SendPropertyChanging();
					this._Num1 = value;
					this.SendPropertyChanged("Num1");
					this.OnNum1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num2", DbType="Int")]
		public System.Nullable<int> Num2
		{
			get
			{
				return this._Num2;
			}
			set
			{
				if ((this._Num2 != value))
				{
					this.OnNum2Changing(value);
					this.SendPropertyChanging();
					this._Num2 = value;
					this.SendPropertyChanged("Num2");
					this.OnNum2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Stock", Storage="_Stocks", ThisKey="Id", OtherKey="MarketId")]
		public EntitySet<Stock> Stocks
		{
			get
			{
				return this._Stocks;
			}
			set
			{
				this._Stocks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Definition = this;
		}
		
		private void detach_Stocks(Stock entity)
		{
			this.SendPropertyChanging();
			entity.Definition = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParameterValue")]
	public partial class ParameterValue : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<int> _ParameterId;
		
		private System.Nullable<double> _Value;
		
		private System.Nullable<System.DateTime> _AffectDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockIdChanging(System.Nullable<int> value);
    partial void OnStockIdChanged();
    partial void OnParameterIdChanging(System.Nullable<int> value);
    partial void OnParameterIdChanged();
    partial void OnValueChanging(System.Nullable<double> value);
    partial void OnValueChanged();
    partial void OnAffectDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAffectDateChanged();
    #endregion
		
		public ParameterValue()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this.OnStockIdChanging(value);
					this.SendPropertyChanging();
					this._StockId = value;
					this.SendPropertyChanged("StockId");
					this.OnStockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParameterId", DbType="Int")]
		public System.Nullable<int> ParameterId
		{
			get
			{
				return this._ParameterId;
			}
			set
			{
				if ((this._ParameterId != value))
				{
					this.OnParameterIdChanging(value);
					this.SendPropertyChanging();
					this._ParameterId = value;
					this.SendPropertyChanged("ParameterId");
					this.OnParameterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float")]
		public System.Nullable<double> Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffectDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> AffectDate
		{
			get
			{
				return this._AffectDate;
			}
			set
			{
				if ((this._AffectDate != value))
				{
					this.OnAffectDateChanging(value);
					this.SendPropertyChanging();
					this._AffectDate = value;
					this.SendPropertyChanged("AffectDate");
					this.OnAffectDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParameterGroup")]
	public partial class ParameterGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ParameterGroup1;
		
		private string _Description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnParameterGroup1Changing(string value);
    partial void OnParameterGroup1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public ParameterGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ParameterGroup", Storage="_ParameterGroup1", DbType="NChar(50)")]
		public string ParameterGroup1
		{
			get
			{
				return this._ParameterGroup1;
			}
			set
			{
				if ((this._ParameterGroup1 != value))
				{
					this.OnParameterGroup1Changing(value);
					this.SendPropertyChanging();
					this._ParameterGroup1 = value;
					this.SendPropertyChanged("ParameterGroup1");
					this.OnParameterGroup1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ParameterDefault")]
	public partial class ParameterDefault : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _TypeId;
		
		private string _DefaultParam;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTypeIdChanging(System.Nullable<int> value);
    partial void OnTypeIdChanged();
    partial void OnDefaultParamChanging(string value);
    partial void OnDefaultParamChanged();
    #endregion
		
		public ParameterDefault()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeId", DbType="Int")]
		public System.Nullable<int> TypeId
		{
			get
			{
				return this._TypeId;
			}
			set
			{
				if ((this._TypeId != value))
				{
					this.OnTypeIdChanging(value);
					this.SendPropertyChanging();
					this._TypeId = value;
					this.SendPropertyChanged("TypeId");
					this.OnTypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefaultParam", DbType="NChar(500)")]
		public string DefaultParam
		{
			get
			{
				return this._DefaultParam;
			}
			set
			{
				if ((this._DefaultParam != value))
				{
					this.OnDefaultParamChanging(value);
					this.SendPropertyChanging();
					this._DefaultParam = value;
					this.SendPropertyChanged("DefaultParam");
					this.OnDefaultParamChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Price")]
	public partial class Price : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<System.DateTime> _PriceDate;
		
		private System.Nullable<decimal> _OpenPrice;
		
		private System.Nullable<decimal> _HighPrice;
		
		private System.Nullable<decimal> _LowPrice;
		
		private System.Nullable<decimal> _ClosePrice;
		
		private System.Nullable<int> _Volume;
		
		private EntityRef<Stock> _Stock;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockIdChanging(System.Nullable<int> value);
    partial void OnStockIdChanged();
    partial void OnPriceDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPriceDateChanged();
    partial void OnOpenPriceChanging(System.Nullable<decimal> value);
    partial void OnOpenPriceChanged();
    partial void OnHighPriceChanging(System.Nullable<decimal> value);
    partial void OnHighPriceChanged();
    partial void OnLowPriceChanging(System.Nullable<decimal> value);
    partial void OnLowPriceChanged();
    partial void OnClosePriceChanging(System.Nullable<decimal> value);
    partial void OnClosePriceChanged();
    partial void OnVolumeChanging(System.Nullable<int> value);
    partial void OnVolumeChanged();
    #endregion
		
		public Price()
		{
			this._Stock = default(EntityRef<Stock>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					if (this._Stock.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStockIdChanging(value);
					this.SendPropertyChanging();
					this._StockId = value;
					this.SendPropertyChanged("StockId");
					this.OnStockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PriceDate
		{
			get
			{
				return this._PriceDate;
			}
			set
			{
				if ((this._PriceDate != value))
				{
					this.OnPriceDateChanging(value);
					this.SendPropertyChanging();
					this._PriceDate = value;
					this.SendPropertyChanged("PriceDate");
					this.OnPriceDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this.OnOpenPriceChanging(value);
					this.SendPropertyChanging();
					this._OpenPrice = value;
					this.SendPropertyChanged("OpenPrice");
					this.OnOpenPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> HighPrice
		{
			get
			{
				return this._HighPrice;
			}
			set
			{
				if ((this._HighPrice != value))
				{
					this.OnHighPriceChanging(value);
					this.SendPropertyChanging();
					this._HighPrice = value;
					this.SendPropertyChanged("HighPrice");
					this.OnHighPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LowPrice
		{
			get
			{
				return this._LowPrice;
			}
			set
			{
				if ((this._LowPrice != value))
				{
					this.OnLowPriceChanging(value);
					this.SendPropertyChanging();
					this._LowPrice = value;
					this.SendPropertyChanged("LowPrice");
					this.OnLowPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this.OnClosePriceChanging(value);
					this.SendPropertyChanging();
					this._ClosePrice = value;
					this.SendPropertyChanged("ClosePrice");
					this.OnClosePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int")]
		public System.Nullable<int> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stock_Price", Storage="_Stock", ThisKey="StockId", OtherKey="Id", IsForeignKey=true)]
		public Stock Stock
		{
			get
			{
				return this._Stock.Entity;
			}
			set
			{
				Stock previousValue = this._Stock.Entity;
				if (((previousValue != value) 
							|| (this._Stock.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stock.Entity = null;
						previousValue.Prices.Remove(this);
					}
					this._Stock.Entity = value;
					if ((value != null))
					{
						value.Prices.Add(this);
						this._StockId = value.Id;
					}
					else
					{
						this._StockId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Stock");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockMonitor")]
	public partial class StockMonitor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _SourceId;
		
		private string _Reason;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockIdChanging(System.Nullable<int> value);
    partial void OnStockIdChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnSourceIdChanging(System.Nullable<int> value);
    partial void OnSourceIdChanged();
    partial void OnReasonChanging(string value);
    partial void OnReasonChanged();
    #endregion
		
		public StockMonitor()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this.OnStockIdChanging(value);
					this.SendPropertyChanging();
					this._StockId = value;
					this.SendPropertyChanged("StockId");
					this.OnStockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", DbType="Int")]
		public System.Nullable<int> SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this.OnSourceIdChanging(value);
					this.SendPropertyChanging();
					this._SourceId = value;
					this.SendPropertyChanged("SourceId");
					this.OnSourceIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(MAX)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this.OnReasonChanging(value);
					this.SendPropertyChanging();
					this._Reason = value;
					this.SendPropertyChanged("Reason");
					this.OnReasonChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vStockMonitor")]
	public partial class vStockMonitor
	{
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private string _Code;
		
		private string _Stock;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<int> _SourceId;
		
		private string _Reason;
		
		private string _Definition;
		
		public vStockMonitor()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this._StockId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="NVarChar(500)")]
		public string Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this._Stock = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this._CreatedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SourceId", DbType="Int")]
		public System.Nullable<int> SourceId
		{
			get
			{
				return this._SourceId;
			}
			set
			{
				if ((this._SourceId != value))
				{
					this._SourceId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reason", DbType="NVarChar(MAX)")]
		public string Reason
		{
			get
			{
				return this._Reason;
			}
			set
			{
				if ((this._Reason != value))
				{
					this._Reason = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Definition", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Definition
		{
			get
			{
				return this._Definition;
			}
			set
			{
				if ((this._Definition != value))
				{
					this._Definition = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vStockFinance")]
	public partial class vStockFinance
	{
		
		private string _Code;
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<int> _Term;
		
		private System.Nullable<double> _Revenue;
		
		private System.Nullable<double> _CostGoodsSold;
		
		private System.Nullable<double> _GrossProfit;
		
		private System.Nullable<double> _BusinessProfit;
		
		private System.Nullable<double> _FinanceProfit;
		
		private System.Nullable<double> _InterestExpenses;
		
		private System.Nullable<double> _PBTI;
		
		private System.Nullable<double> _Tax;
		
		private System.Nullable<double> _NetIncome;
		
		private System.Nullable<double> _ProfitShareholders;
		
		private System.Nullable<double> _TotalAssets;
		
		private System.Nullable<double> _Assets;
		
		private System.Nullable<double> _ShortFinancialInvestments;
		
		private System.Nullable<double> _Inventory;
		
		private System.Nullable<double> _FixedAssets;
		
		private System.Nullable<double> _LongAssets;
		
		private System.Nullable<double> _LongFinanceInvest;
		
		private System.Nullable<double> _ShortDebt;
		
		private System.Nullable<double> _LongDebt;
		
		private System.Nullable<double> _OwnerEquity;
		
		private System.Nullable<double> _ProfitsNotDistributed;
		
		private System.Nullable<double> _PB;
		
		private System.Nullable<double> _PriceBooks;
		
		private System.Nullable<double> _EPSBasic;
		
		private System.Nullable<double> _EPSAdj;
		
		private System.Nullable<double> _Beta;
		
		private System.Nullable<double> _ZScore;
		
		private System.Nullable<double> _DividendRate;
		
		private System.Nullable<double> _ROA;
		
		private System.Nullable<double> _ROE;
		
		private System.Nullable<double> _GrossProfitRate;
		
		private System.Nullable<double> _PBTRate;
		
		private System.Nullable<double> _PATRate;
		
		private System.Nullable<double> _CurrentRatio;
		
		private System.Nullable<double> _QuickRatio;
		
		private System.Nullable<double> _EquityLoans;
		
		private System.Nullable<double> _LongDebtEquity;
		
		private System.Nullable<double> _InventoryTurnaround;
		
		private System.Nullable<double> _AssetTurnover;
		
		private System.Nullable<double> _InterestCoverageRatio;
		
		private System.Nullable<double> _PEBasic;
		
		private System.Nullable<double> _PEAdj;
		
		private System.Nullable<double> _PBPricePerBook;
		
		private System.Nullable<double> _InventoryDays;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		public vStockFinance()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this._StockId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="Int")]
		public System.Nullable<int> Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revenue", DbType="Float")]
		public System.Nullable<double> Revenue
		{
			get
			{
				return this._Revenue;
			}
			set
			{
				if ((this._Revenue != value))
				{
					this._Revenue = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CostGoodsSold", DbType="Float")]
		public System.Nullable<double> CostGoodsSold
		{
			get
			{
				return this._CostGoodsSold;
			}
			set
			{
				if ((this._CostGoodsSold != value))
				{
					this._CostGoodsSold = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossProfit", DbType="Float")]
		public System.Nullable<double> GrossProfit
		{
			get
			{
				return this._GrossProfit;
			}
			set
			{
				if ((this._GrossProfit != value))
				{
					this._GrossProfit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BusinessProfit", DbType="Float")]
		public System.Nullable<double> BusinessProfit
		{
			get
			{
				return this._BusinessProfit;
			}
			set
			{
				if ((this._BusinessProfit != value))
				{
					this._BusinessProfit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FinanceProfit", DbType="Float")]
		public System.Nullable<double> FinanceProfit
		{
			get
			{
				return this._FinanceProfit;
			}
			set
			{
				if ((this._FinanceProfit != value))
				{
					this._FinanceProfit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestExpenses", DbType="Float")]
		public System.Nullable<double> InterestExpenses
		{
			get
			{
				return this._InterestExpenses;
			}
			set
			{
				if ((this._InterestExpenses != value))
				{
					this._InterestExpenses = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBTI", DbType="Float")]
		public System.Nullable<double> PBTI
		{
			get
			{
				return this._PBTI;
			}
			set
			{
				if ((this._PBTI != value))
				{
					this._PBTI = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tax", DbType="Float")]
		public System.Nullable<double> Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this._Tax = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetIncome", DbType="Float")]
		public System.Nullable<double> NetIncome
		{
			get
			{
				return this._NetIncome;
			}
			set
			{
				if ((this._NetIncome != value))
				{
					this._NetIncome = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitShareholders", DbType="Float")]
		public System.Nullable<double> ProfitShareholders
		{
			get
			{
				return this._ProfitShareholders;
			}
			set
			{
				if ((this._ProfitShareholders != value))
				{
					this._ProfitShareholders = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalAssets", DbType="Float")]
		public System.Nullable<double> TotalAssets
		{
			get
			{
				return this._TotalAssets;
			}
			set
			{
				if ((this._TotalAssets != value))
				{
					this._TotalAssets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Assets", DbType="Float")]
		public System.Nullable<double> Assets
		{
			get
			{
				return this._Assets;
			}
			set
			{
				if ((this._Assets != value))
				{
					this._Assets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortFinancialInvestments", DbType="Float")]
		public System.Nullable<double> ShortFinancialInvestments
		{
			get
			{
				return this._ShortFinancialInvestments;
			}
			set
			{
				if ((this._ShortFinancialInvestments != value))
				{
					this._ShortFinancialInvestments = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inventory", DbType="Float")]
		public System.Nullable<double> Inventory
		{
			get
			{
				return this._Inventory;
			}
			set
			{
				if ((this._Inventory != value))
				{
					this._Inventory = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FixedAssets", DbType="Float")]
		public System.Nullable<double> FixedAssets
		{
			get
			{
				return this._FixedAssets;
			}
			set
			{
				if ((this._FixedAssets != value))
				{
					this._FixedAssets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongAssets", DbType="Float")]
		public System.Nullable<double> LongAssets
		{
			get
			{
				return this._LongAssets;
			}
			set
			{
				if ((this._LongAssets != value))
				{
					this._LongAssets = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongFinanceInvest", DbType="Float")]
		public System.Nullable<double> LongFinanceInvest
		{
			get
			{
				return this._LongFinanceInvest;
			}
			set
			{
				if ((this._LongFinanceInvest != value))
				{
					this._LongFinanceInvest = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortDebt", DbType="Float")]
		public System.Nullable<double> ShortDebt
		{
			get
			{
				return this._ShortDebt;
			}
			set
			{
				if ((this._ShortDebt != value))
				{
					this._ShortDebt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDebt", DbType="Float")]
		public System.Nullable<double> LongDebt
		{
			get
			{
				return this._LongDebt;
			}
			set
			{
				if ((this._LongDebt != value))
				{
					this._LongDebt = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OwnerEquity", DbType="Float")]
		public System.Nullable<double> OwnerEquity
		{
			get
			{
				return this._OwnerEquity;
			}
			set
			{
				if ((this._OwnerEquity != value))
				{
					this._OwnerEquity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProfitsNotDistributed", DbType="Float")]
		public System.Nullable<double> ProfitsNotDistributed
		{
			get
			{
				return this._ProfitsNotDistributed;
			}
			set
			{
				if ((this._ProfitsNotDistributed != value))
				{
					this._ProfitsNotDistributed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PB", DbType="Float")]
		public System.Nullable<double> PB
		{
			get
			{
				return this._PB;
			}
			set
			{
				if ((this._PB != value))
				{
					this._PB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceBooks", DbType="Float")]
		public System.Nullable<double> PriceBooks
		{
			get
			{
				return this._PriceBooks;
			}
			set
			{
				if ((this._PriceBooks != value))
				{
					this._PriceBooks = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPSBasic", DbType="Float")]
		public System.Nullable<double> EPSBasic
		{
			get
			{
				return this._EPSBasic;
			}
			set
			{
				if ((this._EPSBasic != value))
				{
					this._EPSBasic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPSAdj", DbType="Float")]
		public System.Nullable<double> EPSAdj
		{
			get
			{
				return this._EPSAdj;
			}
			set
			{
				if ((this._EPSAdj != value))
				{
					this._EPSAdj = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beta", DbType="Float")]
		public System.Nullable<double> Beta
		{
			get
			{
				return this._Beta;
			}
			set
			{
				if ((this._Beta != value))
				{
					this._Beta = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZScore", DbType="Float")]
		public System.Nullable<double> ZScore
		{
			get
			{
				return this._ZScore;
			}
			set
			{
				if ((this._ZScore != value))
				{
					this._ZScore = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DividendRate", DbType="Float")]
		public System.Nullable<double> DividendRate
		{
			get
			{
				return this._DividendRate;
			}
			set
			{
				if ((this._DividendRate != value))
				{
					this._DividendRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROA", DbType="Float")]
		public System.Nullable<double> ROA
		{
			get
			{
				return this._ROA;
			}
			set
			{
				if ((this._ROA != value))
				{
					this._ROA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROE", DbType="Float")]
		public System.Nullable<double> ROE
		{
			get
			{
				return this._ROE;
			}
			set
			{
				if ((this._ROE != value))
				{
					this._ROE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossProfitRate", DbType="Float")]
		public System.Nullable<double> GrossProfitRate
		{
			get
			{
				return this._GrossProfitRate;
			}
			set
			{
				if ((this._GrossProfitRate != value))
				{
					this._GrossProfitRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBTRate", DbType="Float")]
		public System.Nullable<double> PBTRate
		{
			get
			{
				return this._PBTRate;
			}
			set
			{
				if ((this._PBTRate != value))
				{
					this._PBTRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PATRate", DbType="Float")]
		public System.Nullable<double> PATRate
		{
			get
			{
				return this._PATRate;
			}
			set
			{
				if ((this._PATRate != value))
				{
					this._PATRate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentRatio", DbType="Float")]
		public System.Nullable<double> CurrentRatio
		{
			get
			{
				return this._CurrentRatio;
			}
			set
			{
				if ((this._CurrentRatio != value))
				{
					this._CurrentRatio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuickRatio", DbType="Float")]
		public System.Nullable<double> QuickRatio
		{
			get
			{
				return this._QuickRatio;
			}
			set
			{
				if ((this._QuickRatio != value))
				{
					this._QuickRatio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EquityLoans", DbType="Float")]
		public System.Nullable<double> EquityLoans
		{
			get
			{
				return this._EquityLoans;
			}
			set
			{
				if ((this._EquityLoans != value))
				{
					this._EquityLoans = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongDebtEquity", DbType="Float")]
		public System.Nullable<double> LongDebtEquity
		{
			get
			{
				return this._LongDebtEquity;
			}
			set
			{
				if ((this._LongDebtEquity != value))
				{
					this._LongDebtEquity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryTurnaround", DbType="Float")]
		public System.Nullable<double> InventoryTurnaround
		{
			get
			{
				return this._InventoryTurnaround;
			}
			set
			{
				if ((this._InventoryTurnaround != value))
				{
					this._InventoryTurnaround = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AssetTurnover", DbType="Float")]
		public System.Nullable<double> AssetTurnover
		{
			get
			{
				return this._AssetTurnover;
			}
			set
			{
				if ((this._AssetTurnover != value))
				{
					this._AssetTurnover = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InterestCoverageRatio", DbType="Float")]
		public System.Nullable<double> InterestCoverageRatio
		{
			get
			{
				return this._InterestCoverageRatio;
			}
			set
			{
				if ((this._InterestCoverageRatio != value))
				{
					this._InterestCoverageRatio = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEBasic", DbType="Float")]
		public System.Nullable<double> PEBasic
		{
			get
			{
				return this._PEBasic;
			}
			set
			{
				if ((this._PEBasic != value))
				{
					this._PEBasic = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PEAdj", DbType="Float")]
		public System.Nullable<double> PEAdj
		{
			get
			{
				return this._PEAdj;
			}
			set
			{
				if ((this._PEAdj != value))
				{
					this._PEAdj = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBPricePerBook", DbType="Float")]
		public System.Nullable<double> PBPricePerBook
		{
			get
			{
				return this._PBPricePerBook;
			}
			set
			{
				if ((this._PBPricePerBook != value))
				{
					this._PBPricePerBook = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InventoryDays", DbType="Float")]
		public System.Nullable<double> InventoryDays
		{
			get
			{
				return this._InventoryDays;
			}
			set
			{
				if ((this._InventoryDays != value))
				{
					this._InventoryDays = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this._UpdatedDate = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vBranchFinance")]
	public partial class vBranchFinance
	{
		
		private int _Id;
		
		private string _BranchGroup;
		
		private System.Nullable<int> _GroupId;
		
		private string _Branch;
		
		private System.Nullable<decimal> _PE;
		
		private System.Nullable<decimal> _PB;
		
		private System.Nullable<decimal> _EPS;
		
		private System.Nullable<decimal> _Capitalization;
		
		private System.Nullable<decimal> _Income;
		
		private System.Nullable<decimal> _Property;
		
		private System.Nullable<decimal> _PAT;
		
		private System.Nullable<decimal> _ROA;
		
		private System.Nullable<decimal> _ROE;
		
		private System.Nullable<decimal> _MarginProfit;
		
		private System.Nullable<decimal> _PBT;
		
		private System.Nullable<decimal> _DebtPerProperty;
		
		private System.Nullable<decimal> _Short;
		
		private string _FPTS;
		
		private System.Nullable<int> _Term;
		
		public vBranchFinance()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchGroup", DbType="NVarChar(500)")]
		public string BranchGroup
		{
			get
			{
				return this._BranchGroup;
			}
			set
			{
				if ((this._BranchGroup != value))
				{
					this._BranchGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this._GroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Branch", DbType="NVarChar(500)")]
		public string Branch
		{
			get
			{
				return this._Branch;
			}
			set
			{
				if ((this._Branch != value))
				{
					this._Branch = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PE", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PE
		{
			get
			{
				return this._PE;
			}
			set
			{
				if ((this._PE != value))
				{
					this._PE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PB", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PB
		{
			get
			{
				return this._PB;
			}
			set
			{
				if ((this._PB != value))
				{
					this._PB = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> EPS
		{
			get
			{
				return this._EPS;
			}
			set
			{
				if ((this._EPS != value))
				{
					this._EPS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capitalization", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Capitalization
		{
			get
			{
				return this._Capitalization;
			}
			set
			{
				if ((this._Capitalization != value))
				{
					this._Capitalization = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Income", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Income
		{
			get
			{
				return this._Income;
			}
			set
			{
				if ((this._Income != value))
				{
					this._Income = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Property", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Property
		{
			get
			{
				return this._Property;
			}
			set
			{
				if ((this._Property != value))
				{
					this._Property = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PAT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PAT
		{
			get
			{
				return this._PAT;
			}
			set
			{
				if ((this._PAT != value))
				{
					this._PAT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROA", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ROA
		{
			get
			{
				return this._ROA;
			}
			set
			{
				if ((this._ROA != value))
				{
					this._ROA = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROE", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ROE
		{
			get
			{
				return this._ROE;
			}
			set
			{
				if ((this._ROE != value))
				{
					this._ROE = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginProfit", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MarginProfit
		{
			get
			{
				return this._MarginProfit;
			}
			set
			{
				if ((this._MarginProfit != value))
				{
					this._MarginProfit = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PBT", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PBT
		{
			get
			{
				return this._PBT;
			}
			set
			{
				if ((this._PBT != value))
				{
					this._PBT = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DebtPerProperty", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DebtPerProperty
		{
			get
			{
				return this._DebtPerProperty;
			}
			set
			{
				if ((this._DebtPerProperty != value))
				{
					this._DebtPerProperty = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Short", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Short
		{
			get
			{
				return this._Short;
			}
			set
			{
				if ((this._Short != value))
				{
					this._Short = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FPTS", DbType="NVarChar(500)")]
		public string FPTS
		{
			get
			{
				return this._FPTS;
			}
			set
			{
				if ((this._FPTS != value))
				{
					this._FPTS = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Term", DbType="Int")]
		public System.Nullable<int> Term
		{
			get
			{
				return this._Term;
			}
			set
			{
				if ((this._Term != value))
				{
					this._Term = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Portfolio")]
	public partial class Portfolio : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<decimal> _BuyPrice;
		
		private System.Nullable<decimal> _BuyRealPrice;
		
		private System.Nullable<decimal> _SalePrice;
		
		private System.Nullable<decimal> _SaleRealPrice;
		
		private System.Nullable<System.DateTime> _BuyRealDate;
		
		private System.Nullable<System.DateTime> _SaleRealDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockIdChanging(System.Nullable<int> value);
    partial void OnStockIdChanged();
    partial void OnBuyPriceChanging(System.Nullable<decimal> value);
    partial void OnBuyPriceChanged();
    partial void OnBuyRealPriceChanging(System.Nullable<decimal> value);
    partial void OnBuyRealPriceChanged();
    partial void OnSalePriceChanging(System.Nullable<decimal> value);
    partial void OnSalePriceChanged();
    partial void OnSaleRealPriceChanging(System.Nullable<decimal> value);
    partial void OnSaleRealPriceChanged();
    partial void OnBuyRealDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBuyRealDateChanged();
    partial void OnSaleRealDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSaleRealDateChanged();
    #endregion
		
		public Portfolio()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this.OnStockIdChanging(value);
					this.SendPropertyChanging();
					this._StockId = value;
					this.SendPropertyChanged("StockId");
					this.OnStockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BuyPrice
		{
			get
			{
				return this._BuyPrice;
			}
			set
			{
				if ((this._BuyPrice != value))
				{
					this.OnBuyPriceChanging(value);
					this.SendPropertyChanging();
					this._BuyPrice = value;
					this.SendPropertyChanged("BuyPrice");
					this.OnBuyPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyRealPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BuyRealPrice
		{
			get
			{
				return this._BuyRealPrice;
			}
			set
			{
				if ((this._BuyRealPrice != value))
				{
					this.OnBuyRealPriceChanging(value);
					this.SendPropertyChanging();
					this._BuyRealPrice = value;
					this.SendPropertyChanged("BuyRealPrice");
					this.OnBuyRealPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this.OnSalePriceChanging(value);
					this.SendPropertyChanging();
					this._SalePrice = value;
					this.SendPropertyChanged("SalePrice");
					this.OnSalePriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleRealPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SaleRealPrice
		{
			get
			{
				return this._SaleRealPrice;
			}
			set
			{
				if ((this._SaleRealPrice != value))
				{
					this.OnSaleRealPriceChanging(value);
					this.SendPropertyChanging();
					this._SaleRealPrice = value;
					this.SendPropertyChanged("SaleRealPrice");
					this.OnSaleRealPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyRealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BuyRealDate
		{
			get
			{
				return this._BuyRealDate;
			}
			set
			{
				if ((this._BuyRealDate != value))
				{
					this.OnBuyRealDateChanging(value);
					this.SendPropertyChanging();
					this._BuyRealDate = value;
					this.SendPropertyChanged("BuyRealDate");
					this.OnBuyRealDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleRealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SaleRealDate
		{
			get
			{
				return this._SaleRealDate;
			}
			set
			{
				if ((this._SaleRealDate != value))
				{
					this.OnSaleRealDateChanging(value);
					this.SendPropertyChanging();
					this._SaleRealDate = value;
					this.SendPropertyChanged("SaleRealDate");
					this.OnSaleRealDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vPortfolio")]
	public partial class vPortfolio
	{
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private System.Nullable<decimal> _BuyPrice;
		
		private System.Nullable<decimal> _BuyRealPrice;
		
		private System.Nullable<decimal> _SalePrice;
		
		private System.Nullable<decimal> _SaleRealPrice;
		
		private System.Nullable<System.DateTime> _BuyRealDate;
		
		private System.Nullable<System.DateTime> _SaleRealDate;
		
		private string _Stock;
		
		public vPortfolio()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this._StockId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BuyPrice
		{
			get
			{
				return this._BuyPrice;
			}
			set
			{
				if ((this._BuyPrice != value))
				{
					this._BuyPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyRealPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BuyRealPrice
		{
			get
			{
				return this._BuyRealPrice;
			}
			set
			{
				if ((this._BuyRealPrice != value))
				{
					this._BuyRealPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SalePrice
		{
			get
			{
				return this._SalePrice;
			}
			set
			{
				if ((this._SalePrice != value))
				{
					this._SalePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleRealPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> SaleRealPrice
		{
			get
			{
				return this._SaleRealPrice;
			}
			set
			{
				if ((this._SaleRealPrice != value))
				{
					this._SaleRealPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuyRealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> BuyRealDate
		{
			get
			{
				return this._BuyRealDate;
			}
			set
			{
				if ((this._BuyRealDate != value))
				{
					this._BuyRealDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SaleRealDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SaleRealDate
		{
			get
			{
				return this._SaleRealDate;
			}
			set
			{
				if ((this._SaleRealDate != value))
				{
					this._SaleRealDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stock", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Stock
		{
			get
			{
				return this._Stock;
			}
			set
			{
				if ((this._Stock != value))
				{
					this._Stock = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vStockInfo")]
	public partial class vStockInfo
	{
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private string _Code;
		
		private string _Url;
		
		public vStockInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this._StockId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(600)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StockHolder")]
	public partial class StockHolder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private string _StockHolderName;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<System.DateTime> _AffectedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnStockIdChanging(System.Nullable<int> value);
    partial void OnStockIdChanged();
    partial void OnStockHolderNameChanging(string value);
    partial void OnStockHolderNameChanged();
    partial void OnQuantityChanging(System.Nullable<int> value);
    partial void OnQuantityChanged();
    partial void OnAffectedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAffectedDateChanged();
    #endregion
		
		public StockHolder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this.OnStockIdChanging(value);
					this.SendPropertyChanging();
					this._StockId = value;
					this.SendPropertyChanged("StockId");
					this.OnStockIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockHolderName", DbType="NVarChar(50)")]
		public string StockHolderName
		{
			get
			{
				return this._StockHolderName;
			}
			set
			{
				if ((this._StockHolderName != value))
				{
					this.OnStockHolderNameChanging(value);
					this.SendPropertyChanging();
					this._StockHolderName = value;
					this.SendPropertyChanged("StockHolderName");
					this.OnStockHolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffectedDate", DbType="Date")]
		public System.Nullable<System.DateTime> AffectedDate
		{
			get
			{
				return this._AffectedDate;
			}
			set
			{
				if ((this._AffectedDate != value))
				{
					this.OnAffectedDateChanging(value);
					this.SendPropertyChanging();
					this._AffectedDate = value;
					this.SendPropertyChanged("AffectedDate");
					this.OnAffectedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vStockHolder")]
	public partial class vStockHolder
	{
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private string _Code;
		
		private string _StockHolderName;
		
		private System.Nullable<int> _Quantity;
		
		private System.Nullable<decimal> _HolderPercent;
		
		private System.Nullable<System.DateTime> _AffectedDate;
		
		private System.Nullable<decimal> _CurrentStock;
		
		public vStockHolder()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this._StockId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockHolderName", DbType="NVarChar(50)")]
		public string StockHolderName
		{
			get
			{
				return this._StockHolderName;
			}
			set
			{
				if ((this._StockHolderName != value))
				{
					this._StockHolderName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HolderPercent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> HolderPercent
		{
			get
			{
				return this._HolderPercent;
			}
			set
			{
				if ((this._HolderPercent != value))
				{
					this._HolderPercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AffectedDate", DbType="Date")]
		public System.Nullable<System.DateTime> AffectedDate
		{
			get
			{
				return this._AffectedDate;
			}
			set
			{
				if ((this._AffectedDate != value))
				{
					this._AffectedDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentStock", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CurrentStock
		{
			get
			{
				return this._CurrentStock;
			}
			set
			{
				if ((this._CurrentStock != value))
				{
					this._CurrentStock = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Branch")]
	public partial class Branch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _GroupId;
		
		private string _Branch1;
		
		private System.Nullable<decimal> _ChangeNumber;
		
		private System.Nullable<decimal> _ChangePercent;
		
		private System.Nullable<decimal> _EPS;
		
		private System.Nullable<decimal> _PE;
		
		private System.Nullable<decimal> _ROA;
		
		private System.Nullable<decimal> _ROE;
		
		private System.Nullable<decimal> _AvgPrice;
		
		private System.Nullable<decimal> _BookValue;
		
		private System.Nullable<decimal> _PB;
		
		private System.Nullable<decimal> _Beta;
		
		private System.Nullable<decimal> _TotalStock;
		
		private System.Nullable<decimal> _ForeignStock;
		
		private System.Nullable<decimal> _ForeignPercent;
		
		private System.Nullable<decimal> _Capitalization;
		
		private string _Url;
		
		private System.Nullable<int> _FiveBasicElementId;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnBranch1Changing(string value);
    partial void OnBranch1Changed();
    partial void OnChangeNumberChanging(System.Nullable<decimal> value);
    partial void OnChangeNumberChanged();
    partial void OnChangePercentChanging(System.Nullable<decimal> value);
    partial void OnChangePercentChanged();
    partial void OnEPSChanging(System.Nullable<decimal> value);
    partial void OnEPSChanged();
    partial void OnPEChanging(System.Nullable<decimal> value);
    partial void OnPEChanged();
    partial void OnROAChanging(System.Nullable<decimal> value);
    partial void OnROAChanged();
    partial void OnROEChanging(System.Nullable<decimal> value);
    partial void OnROEChanged();
    partial void OnAvgPriceChanging(System.Nullable<decimal> value);
    partial void OnAvgPriceChanged();
    partial void OnBookValueChanging(System.Nullable<decimal> value);
    partial void OnBookValueChanged();
    partial void OnPBChanging(System.Nullable<decimal> value);
    partial void OnPBChanged();
    partial void OnBetaChanging(System.Nullable<decimal> value);
    partial void OnBetaChanged();
    partial void OnTotalStockChanging(System.Nullable<decimal> value);
    partial void OnTotalStockChanged();
    partial void OnForeignStockChanging(System.Nullable<decimal> value);
    partial void OnForeignStockChanged();
    partial void OnForeignPercentChanging(System.Nullable<decimal> value);
    partial void OnForeignPercentChanged();
    partial void OnCapitalizationChanging(System.Nullable<decimal> value);
    partial void OnCapitalizationChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnFiveBasicElementIdChanging(System.Nullable<int> value);
    partial void OnFiveBasicElementIdChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Branch()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Branch", Storage="_Branch1", DbType="NVarChar(500)")]
		public string Branch1
		{
			get
			{
				return this._Branch1;
			}
			set
			{
				if ((this._Branch1 != value))
				{
					this.OnBranch1Changing(value);
					this.SendPropertyChanging();
					this._Branch1 = value;
					this.SendPropertyChanged("Branch1");
					this.OnBranch1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeNumber", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ChangeNumber
		{
			get
			{
				return this._ChangeNumber;
			}
			set
			{
				if ((this._ChangeNumber != value))
				{
					this.OnChangeNumberChanging(value);
					this.SendPropertyChanging();
					this._ChangeNumber = value;
					this.SendPropertyChanged("ChangeNumber");
					this.OnChangeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePercent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ChangePercent
		{
			get
			{
				return this._ChangePercent;
			}
			set
			{
				if ((this._ChangePercent != value))
				{
					this.OnChangePercentChanging(value);
					this.SendPropertyChanging();
					this._ChangePercent = value;
					this.SendPropertyChanged("ChangePercent");
					this.OnChangePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> EPS
		{
			get
			{
				return this._EPS;
			}
			set
			{
				if ((this._EPS != value))
				{
					this.OnEPSChanging(value);
					this.SendPropertyChanging();
					this._EPS = value;
					this.SendPropertyChanged("EPS");
					this.OnEPSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PE", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PE
		{
			get
			{
				return this._PE;
			}
			set
			{
				if ((this._PE != value))
				{
					this.OnPEChanging(value);
					this.SendPropertyChanging();
					this._PE = value;
					this.SendPropertyChanged("PE");
					this.OnPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROA", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ROA
		{
			get
			{
				return this._ROA;
			}
			set
			{
				if ((this._ROA != value))
				{
					this.OnROAChanging(value);
					this.SendPropertyChanging();
					this._ROA = value;
					this.SendPropertyChanged("ROA");
					this.OnROAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROE", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ROE
		{
			get
			{
				return this._ROE;
			}
			set
			{
				if ((this._ROE != value))
				{
					this.OnROEChanging(value);
					this.SendPropertyChanging();
					this._ROE = value;
					this.SendPropertyChanged("ROE");
					this.OnROEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvgPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> AvgPrice
		{
			get
			{
				return this._AvgPrice;
			}
			set
			{
				if ((this._AvgPrice != value))
				{
					this.OnAvgPriceChanging(value);
					this.SendPropertyChanging();
					this._AvgPrice = value;
					this.SendPropertyChanged("AvgPrice");
					this.OnAvgPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BookValue
		{
			get
			{
				return this._BookValue;
			}
			set
			{
				if ((this._BookValue != value))
				{
					this.OnBookValueChanging(value);
					this.SendPropertyChanging();
					this._BookValue = value;
					this.SendPropertyChanged("BookValue");
					this.OnBookValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PB", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PB
		{
			get
			{
				return this._PB;
			}
			set
			{
				if ((this._PB != value))
				{
					this.OnPBChanging(value);
					this.SendPropertyChanging();
					this._PB = value;
					this.SendPropertyChanged("PB");
					this.OnPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beta", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Beta
		{
			get
			{
				return this._Beta;
			}
			set
			{
				if ((this._Beta != value))
				{
					this.OnBetaChanging(value);
					this.SendPropertyChanging();
					this._Beta = value;
					this.SendPropertyChanged("Beta");
					this.OnBetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalStock", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalStock
		{
			get
			{
				return this._TotalStock;
			}
			set
			{
				if ((this._TotalStock != value))
				{
					this.OnTotalStockChanging(value);
					this.SendPropertyChanging();
					this._TotalStock = value;
					this.SendPropertyChanged("TotalStock");
					this.OnTotalStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignStock", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ForeignStock
		{
			get
			{
				return this._ForeignStock;
			}
			set
			{
				if ((this._ForeignStock != value))
				{
					this.OnForeignStockChanging(value);
					this.SendPropertyChanging();
					this._ForeignStock = value;
					this.SendPropertyChanged("ForeignStock");
					this.OnForeignStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignPercent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ForeignPercent
		{
			get
			{
				return this._ForeignPercent;
			}
			set
			{
				if ((this._ForeignPercent != value))
				{
					this.OnForeignPercentChanging(value);
					this.SendPropertyChanging();
					this._ForeignPercent = value;
					this.SendPropertyChanged("ForeignPercent");
					this.OnForeignPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capitalization", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Capitalization
		{
			get
			{
				return this._Capitalization;
			}
			set
			{
				if ((this._Capitalization != value))
				{
					this.OnCapitalizationChanging(value);
					this.SendPropertyChanging();
					this._Capitalization = value;
					this.SendPropertyChanged("Capitalization");
					this.OnCapitalizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="NVarChar(MAX)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiveBasicElementId", DbType="Int")]
		public System.Nullable<int> FiveBasicElementId
		{
			get
			{
				return this._FiveBasicElementId;
			}
			set
			{
				if ((this._FiveBasicElementId != value))
				{
					this.OnFiveBasicElementIdChanging(value);
					this.SendPropertyChanging();
					this._FiveBasicElementId = value;
					this.SendPropertyChanged("FiveBasicElementId");
					this.OnFiveBasicElementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stock")]
	public partial class Stock : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Code;
		
		private string _Stock1;
		
		private System.Nullable<int> _BranchId;
		
		private System.Nullable<int> _MarketId;
		
		private System.Nullable<decimal> _ChangeNumber;
		
		private System.Nullable<decimal> _ChangePercent;
		
		private System.Nullable<decimal> _EPS;
		
		private System.Nullable<decimal> _PE;
		
		private System.Nullable<decimal> _ROA;
		
		private System.Nullable<decimal> _ROE;
		
		private System.Nullable<decimal> _BookValue;
		
		private System.Nullable<decimal> _PB;
		
		private System.Nullable<decimal> _Beta;
		
		private System.Nullable<decimal> _TotalStock;
		
		private System.Nullable<decimal> _ForeignStock;
		
		private System.Nullable<decimal> _ForeignPercent;
		
		private System.Nullable<decimal> _Capitalization;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private EntitySet<Price> _Prices;
		
		private EntityRef<Definition> _Definition;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnStock1Changing(string value);
    partial void OnStock1Changed();
    partial void OnBranchIdChanging(System.Nullable<int> value);
    partial void OnBranchIdChanged();
    partial void OnMarketIdChanging(System.Nullable<int> value);
    partial void OnMarketIdChanged();
    partial void OnChangeNumberChanging(System.Nullable<decimal> value);
    partial void OnChangeNumberChanged();
    partial void OnChangePercentChanging(System.Nullable<decimal> value);
    partial void OnChangePercentChanged();
    partial void OnEPSChanging(System.Nullable<decimal> value);
    partial void OnEPSChanged();
    partial void OnPEChanging(System.Nullable<decimal> value);
    partial void OnPEChanged();
    partial void OnROAChanging(System.Nullable<decimal> value);
    partial void OnROAChanged();
    partial void OnROEChanging(System.Nullable<decimal> value);
    partial void OnROEChanged();
    partial void OnBookValueChanging(System.Nullable<decimal> value);
    partial void OnBookValueChanged();
    partial void OnPBChanging(System.Nullable<decimal> value);
    partial void OnPBChanged();
    partial void OnBetaChanging(System.Nullable<decimal> value);
    partial void OnBetaChanged();
    partial void OnTotalStockChanging(System.Nullable<decimal> value);
    partial void OnTotalStockChanged();
    partial void OnForeignStockChanging(System.Nullable<decimal> value);
    partial void OnForeignStockChanged();
    partial void OnForeignPercentChanging(System.Nullable<decimal> value);
    partial void OnForeignPercentChanged();
    partial void OnCapitalizationChanging(System.Nullable<decimal> value);
    partial void OnCapitalizationChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    #endregion
		
		public Stock()
		{
			this._Prices = new EntitySet<Price>(new Action<Price>(this.attach_Prices), new Action<Price>(this.detach_Prices));
			this._Definition = default(EntityRef<Definition>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Stock", Storage="_Stock1", DbType="NVarChar(500)")]
		public string Stock1
		{
			get
			{
				return this._Stock1;
			}
			set
			{
				if ((this._Stock1 != value))
				{
					this.OnStock1Changing(value);
					this.SendPropertyChanging();
					this._Stock1 = value;
					this.SendPropertyChanged("Stock1");
					this.OnStock1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this.OnBranchIdChanging(value);
					this.SendPropertyChanging();
					this._BranchId = value;
					this.SendPropertyChanged("BranchId");
					this.OnBranchIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketId", DbType="Int")]
		public System.Nullable<int> MarketId
		{
			get
			{
				return this._MarketId;
			}
			set
			{
				if ((this._MarketId != value))
				{
					if (this._Definition.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMarketIdChanging(value);
					this.SendPropertyChanging();
					this._MarketId = value;
					this.SendPropertyChanged("MarketId");
					this.OnMarketIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangeNumber", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ChangeNumber
		{
			get
			{
				return this._ChangeNumber;
			}
			set
			{
				if ((this._ChangeNumber != value))
				{
					this.OnChangeNumberChanging(value);
					this.SendPropertyChanging();
					this._ChangeNumber = value;
					this.SendPropertyChanged("ChangeNumber");
					this.OnChangeNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangePercent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ChangePercent
		{
			get
			{
				return this._ChangePercent;
			}
			set
			{
				if ((this._ChangePercent != value))
				{
					this.OnChangePercentChanging(value);
					this.SendPropertyChanging();
					this._ChangePercent = value;
					this.SendPropertyChanged("ChangePercent");
					this.OnChangePercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EPS", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> EPS
		{
			get
			{
				return this._EPS;
			}
			set
			{
				if ((this._EPS != value))
				{
					this.OnEPSChanging(value);
					this.SendPropertyChanging();
					this._EPS = value;
					this.SendPropertyChanged("EPS");
					this.OnEPSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PE", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PE
		{
			get
			{
				return this._PE;
			}
			set
			{
				if ((this._PE != value))
				{
					this.OnPEChanging(value);
					this.SendPropertyChanging();
					this._PE = value;
					this.SendPropertyChanged("PE");
					this.OnPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROA", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ROA
		{
			get
			{
				return this._ROA;
			}
			set
			{
				if ((this._ROA != value))
				{
					this.OnROAChanging(value);
					this.SendPropertyChanging();
					this._ROA = value;
					this.SendPropertyChanged("ROA");
					this.OnROAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ROE", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ROE
		{
			get
			{
				return this._ROE;
			}
			set
			{
				if ((this._ROE != value))
				{
					this.OnROEChanging(value);
					this.SendPropertyChanging();
					this._ROE = value;
					this.SendPropertyChanged("ROE");
					this.OnROEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookValue", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> BookValue
		{
			get
			{
				return this._BookValue;
			}
			set
			{
				if ((this._BookValue != value))
				{
					this.OnBookValueChanging(value);
					this.SendPropertyChanging();
					this._BookValue = value;
					this.SendPropertyChanged("BookValue");
					this.OnBookValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PB", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PB
		{
			get
			{
				return this._PB;
			}
			set
			{
				if ((this._PB != value))
				{
					this.OnPBChanging(value);
					this.SendPropertyChanging();
					this._PB = value;
					this.SendPropertyChanged("PB");
					this.OnPBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beta", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Beta
		{
			get
			{
				return this._Beta;
			}
			set
			{
				if ((this._Beta != value))
				{
					this.OnBetaChanging(value);
					this.SendPropertyChanging();
					this._Beta = value;
					this.SendPropertyChanged("Beta");
					this.OnBetaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalStock", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalStock
		{
			get
			{
				return this._TotalStock;
			}
			set
			{
				if ((this._TotalStock != value))
				{
					this.OnTotalStockChanging(value);
					this.SendPropertyChanging();
					this._TotalStock = value;
					this.SendPropertyChanged("TotalStock");
					this.OnTotalStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignStock", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ForeignStock
		{
			get
			{
				return this._ForeignStock;
			}
			set
			{
				if ((this._ForeignStock != value))
				{
					this.OnForeignStockChanging(value);
					this.SendPropertyChanging();
					this._ForeignStock = value;
					this.SendPropertyChanged("ForeignStock");
					this.OnForeignStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ForeignPercent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ForeignPercent
		{
			get
			{
				return this._ForeignPercent;
			}
			set
			{
				if ((this._ForeignPercent != value))
				{
					this.OnForeignPercentChanging(value);
					this.SendPropertyChanging();
					this._ForeignPercent = value;
					this.SendPropertyChanged("ForeignPercent");
					this.OnForeignPercentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Capitalization", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Capitalization
		{
			get
			{
				return this._Capitalization;
			}
			set
			{
				if ((this._Capitalization != value))
				{
					this.OnCapitalizationChanging(value);
					this.SendPropertyChanging();
					this._Capitalization = value;
					this.SendPropertyChanged("Capitalization");
					this.OnCapitalizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="Date")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stock_Price", Storage="_Prices", ThisKey="Id", OtherKey="StockId")]
		public EntitySet<Price> Prices
		{
			get
			{
				return this._Prices;
			}
			set
			{
				this._Prices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Definition_Stock", Storage="_Definition", ThisKey="MarketId", OtherKey="Id", IsForeignKey=true)]
		public Definition Definition
		{
			get
			{
				return this._Definition.Entity;
			}
			set
			{
				Definition previousValue = this._Definition.Entity;
				if (((previousValue != value) 
							|| (this._Definition.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Definition.Entity = null;
						previousValue.Stocks.Remove(this);
					}
					this._Definition.Entity = value;
					if ((value != null))
					{
						value.Stocks.Add(this);
						this._MarketId = value.Id;
					}
					else
					{
						this._MarketId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Definition");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prices(Price entity)
		{
			this.SendPropertyChanging();
			entity.Stock = this;
		}
		
		private void detach_Prices(Price entity)
		{
			this.SendPropertyChanging();
			entity.Stock = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vPrice")]
	public partial class vPrice
	{
		
		private int _Id;
		
		private System.Nullable<int> _StockId;
		
		private string _Code;
		
		private System.Nullable<System.DateTime> _PriceDate;
		
		private System.Nullable<decimal> _OpenPrice;
		
		private System.Nullable<decimal> _HighPrice;
		
		private System.Nullable<decimal> _LowPrice;
		
		private System.Nullable<decimal> _ClosePrice;
		
		private System.Nullable<int> _Volume;
		
		private System.Nullable<int> _BranchId;
		
		private System.Nullable<int> _MarketId;
		
		private string _Market;
		
		private string _BranchGroup;
		
		private string _EnFiveBasicElement;
		
		private string _VnFiveBasicElement;
		
		private System.Nullable<int> _FiveBasicElementId;
		
		public vPrice()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StockId", DbType="Int")]
		public System.Nullable<int> StockId
		{
			get
			{
				return this._StockId;
			}
			set
			{
				if ((this._StockId != value))
				{
					this._StockId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PriceDate
		{
			get
			{
				return this._PriceDate;
			}
			set
			{
				if ((this._PriceDate != value))
				{
					this._PriceDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this._OpenPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> HighPrice
		{
			get
			{
				return this._HighPrice;
			}
			set
			{
				if ((this._HighPrice != value))
				{
					this._HighPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LowPrice
		{
			get
			{
				return this._LowPrice;
			}
			set
			{
				if ((this._LowPrice != value))
				{
					this._LowPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this._ClosePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int")]
		public System.Nullable<int> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this._Volume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchId", DbType="Int")]
		public System.Nullable<int> BranchId
		{
			get
			{
				return this._BranchId;
			}
			set
			{
				if ((this._BranchId != value))
				{
					this._BranchId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarketId", DbType="Int")]
		public System.Nullable<int> MarketId
		{
			get
			{
				return this._MarketId;
			}
			set
			{
				if ((this._MarketId != value))
				{
					this._MarketId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Market", DbType="NVarChar(100)")]
		public string Market
		{
			get
			{
				return this._Market;
			}
			set
			{
				if ((this._Market != value))
				{
					this._Market = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BranchGroup", DbType="NVarChar(500)")]
		public string BranchGroup
		{
			get
			{
				return this._BranchGroup;
			}
			set
			{
				if ((this._BranchGroup != value))
				{
					this._BranchGroup = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnFiveBasicElement", DbType="NVarChar(100)")]
		public string EnFiveBasicElement
		{
			get
			{
				return this._EnFiveBasicElement;
			}
			set
			{
				if ((this._EnFiveBasicElement != value))
				{
					this._EnFiveBasicElement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VnFiveBasicElement", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string VnFiveBasicElement
		{
			get
			{
				return this._VnFiveBasicElement;
			}
			set
			{
				if ((this._VnFiveBasicElement != value))
				{
					this._VnFiveBasicElement = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FiveBasicElementId", DbType="Int")]
		public System.Nullable<int> FiveBasicElementId
		{
			get
			{
				return this._FiveBasicElementId;
			}
			set
			{
				if ((this._FiveBasicElementId != value))
				{
					this._FiveBasicElementId = value;
				}
			}
		}
	}
	
	public partial class fPriceResult
	{
		
		private int _Id;
		
		private string _Code;
		
		private string _Market;
		
		private System.Nullable<int> _Volume;
		
		private System.Nullable<decimal> _MaxPrice;
		
		private System.Nullable<decimal> _MinPrice;
		
		private System.Nullable<decimal> _ChangedPercent;
		
		private System.Nullable<decimal> _OpenPrice;
		
		private System.Nullable<decimal> _ClosePrice;
		
		private System.Nullable<decimal> _HighPrice;
		
		private System.Nullable<decimal> _LowPrice;
		
		public fPriceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Market", DbType="NVarChar(10)")]
		public string Market
		{
			get
			{
				return this._Market;
			}
			set
			{
				if ((this._Market != value))
				{
					this._Market = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int")]
		public System.Nullable<int> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this._Volume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaxPrice
		{
			get
			{
				return this._MaxPrice;
			}
			set
			{
				if ((this._MaxPrice != value))
				{
					this._MaxPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MinPrice
		{
			get
			{
				return this._MinPrice;
			}
			set
			{
				if ((this._MinPrice != value))
				{
					this._MinPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChangedPercent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ChangedPercent
		{
			get
			{
				return this._ChangedPercent;
			}
			set
			{
				if ((this._ChangedPercent != value))
				{
					this._ChangedPercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> OpenPrice
		{
			get
			{
				return this._OpenPrice;
			}
			set
			{
				if ((this._OpenPrice != value))
				{
					this._OpenPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClosePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> ClosePrice
		{
			get
			{
				return this._ClosePrice;
			}
			set
			{
				if ((this._ClosePrice != value))
				{
					this._ClosePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HighPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> HighPrice
		{
			get
			{
				return this._HighPrice;
			}
			set
			{
				if ((this._HighPrice != value))
				{
					this._HighPrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LowPrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LowPrice
		{
			get
			{
				return this._LowPrice;
			}
			set
			{
				if ((this._LowPrice != value))
				{
					this._LowPrice = value;
				}
			}
		}
	}
	
	public partial class fChangedPriceResult
	{
		
		private int _Id;
		
		private string _Code;
		
		private string _Market;
		
		private System.Nullable<int> _Volume;
		
		private System.Nullable<decimal> _MinClosePrice;
		
		private System.Nullable<decimal> _MaxClosePrice;
		
		private System.Nullable<decimal> _LastClosePrice;
		
		private System.Nullable<decimal> _IncreasePercent;
		
		private System.Nullable<decimal> _DecreasePercent;
		
		public fChangedPriceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this._Code = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Market", DbType="NVarChar(10)")]
		public string Market
		{
			get
			{
				return this._Market;
			}
			set
			{
				if ((this._Market != value))
				{
					this._Market = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Int")]
		public System.Nullable<int> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this._Volume = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinClosePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MinClosePrice
		{
			get
			{
				return this._MinClosePrice;
			}
			set
			{
				if ((this._MinClosePrice != value))
				{
					this._MinClosePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxClosePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaxClosePrice
		{
			get
			{
				return this._MaxClosePrice;
			}
			set
			{
				if ((this._MaxClosePrice != value))
				{
					this._MaxClosePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastClosePrice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> LastClosePrice
		{
			get
			{
				return this._LastClosePrice;
			}
			set
			{
				if ((this._LastClosePrice != value))
				{
					this._LastClosePrice = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IncreasePercent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> IncreasePercent
		{
			get
			{
				return this._IncreasePercent;
			}
			set
			{
				if ((this._IncreasePercent != value))
				{
					this._IncreasePercent = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DecreasePercent", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DecreasePercent
		{
			get
			{
				return this._DecreasePercent;
			}
			set
			{
				if ((this._DecreasePercent != value))
				{
					this._DecreasePercent = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
