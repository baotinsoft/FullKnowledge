#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DBSynchronization.DataContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBSync")]
	public partial class DBSyncDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDB(DB instance);
    partial void UpdateDB(DB instance);
    partial void DeleteDB(DB instance);
    partial void InsertUrlDetail(UrlDetail instance);
    partial void UpdateUrlDetail(UrlDetail instance);
    partial void DeleteUrlDetail(UrlDetail instance);
    partial void InsertDefinition(Definition instance);
    partial void UpdateDefinition(Definition instance);
    partial void DeleteDefinition(Definition instance);
    partial void InsertDefinitionGroup(DefinitionGroup instance);
    partial void UpdateDefinitionGroup(DefinitionGroup instance);
    partial void DeleteDefinitionGroup(DefinitionGroup instance);
    partial void InsertMergeTable(MergeTable instance);
    partial void UpdateMergeTable(MergeTable instance);
    partial void DeleteMergeTable(MergeTable instance);
    partial void InsertTableRequest(TableRequest instance);
    partial void UpdateTableRequest(TableRequest instance);
    partial void DeleteTableRequest(TableRequest instance);
    partial void InsertUrl(Url instance);
    partial void UpdateUrl(Url instance);
    partial void DeleteUrl(Url instance);
    partial void InsertServerName(ServerName instance);
    partial void UpdateServerName(ServerName instance);
    partial void DeleteServerName(ServerName instance);
    #endregion
		
		public DBSyncDataContext() : 
				base(global::DBSynchronization.Properties.Settings.Default.DBSyncConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBSyncDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSyncDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSyncDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBSyncDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DB> DBs
		{
			get
			{
				return this.GetTable<DB>();
			}
		}
		
		public System.Data.Linq.Table<UrlDetail> UrlDetails
		{
			get
			{
				return this.GetTable<UrlDetail>();
			}
		}
		
		public System.Data.Linq.Table<Definition> Definitions
		{
			get
			{
				return this.GetTable<Definition>();
			}
		}
		
		public System.Data.Linq.Table<DefinitionGroup> DefinitionGroups
		{
			get
			{
				return this.GetTable<DefinitionGroup>();
			}
		}
		
		public System.Data.Linq.Table<MergeTable> MergeTables
		{
			get
			{
				return this.GetTable<MergeTable>();
			}
		}
		
		public System.Data.Linq.Table<TableRequest> TableRequests
		{
			get
			{
				return this.GetTable<TableRequest>();
			}
		}
		
		public System.Data.Linq.Table<Url> Urls
		{
			get
			{
				return this.GetTable<Url>();
			}
		}
		
		public System.Data.Linq.Table<ServerName> ServerNames
		{
			get
			{
				return this.GetTable<ServerName>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DB")]
	public partial class DB : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DBSource;
		
		private string _DBDest;
		
		private System.Nullable<int> _ServerId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDBSourceChanging(string value);
    partial void OnDBSourceChanged();
    partial void OnDBDestChanging(string value);
    partial void OnDBDestChanged();
    partial void OnServerIdChanging(System.Nullable<int> value);
    partial void OnServerIdChanged();
    #endregion
		
		public DB()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBSource", DbType="NVarChar(500)")]
		public string DBSource
		{
			get
			{
				return this._DBSource;
			}
			set
			{
				if ((this._DBSource != value))
				{
					this.OnDBSourceChanging(value);
					this.SendPropertyChanging();
					this._DBSource = value;
					this.SendPropertyChanged("DBSource");
					this.OnDBSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBDest", DbType="NVarChar(500)")]
		public string DBDest
		{
			get
			{
				return this._DBDest;
			}
			set
			{
				if ((this._DBDest != value))
				{
					this.OnDBDestChanging(value);
					this.SendPropertyChanging();
					this._DBDest = value;
					this.SendPropertyChanged("DBDest");
					this.OnDBDestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerId", DbType="Int")]
		public System.Nullable<int> ServerId
		{
			get
			{
				return this._ServerId;
			}
			set
			{
				if ((this._ServerId != value))
				{
					this.OnServerIdChanging(value);
					this.SendPropertyChanging();
					this._ServerId = value;
					this.SendPropertyChanged("ServerId");
					this.OnServerIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UrlDetail")]
	public partial class UrlDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _UrlId;
		
		private string _SearchSkip;
		
		private string _SearchBegin;
		
		private string _SearchEnd;
		
		private System.Nullable<int> _FieldNum;
		
		private System.Nullable<int> _FieldOrder;
		
		private string _DataType;
		
		private System.Nullable<int> _DefGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnUrlIdChanging(System.Nullable<int> value);
    partial void OnUrlIdChanged();
    partial void OnSearchSkipChanging(string value);
    partial void OnSearchSkipChanged();
    partial void OnSearchBeginChanging(string value);
    partial void OnSearchBeginChanged();
    partial void OnSearchEndChanging(string value);
    partial void OnSearchEndChanged();
    partial void OnFieldNumChanging(System.Nullable<int> value);
    partial void OnFieldNumChanged();
    partial void OnFieldOrderChanging(System.Nullable<int> value);
    partial void OnFieldOrderChanged();
    partial void OnDataTypeChanging(string value);
    partial void OnDataTypeChanged();
    partial void OnDefGroupChanging(System.Nullable<int> value);
    partial void OnDefGroupChanged();
    #endregion
		
		public UrlDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UrlId", DbType="Int")]
		public System.Nullable<int> UrlId
		{
			get
			{
				return this._UrlId;
			}
			set
			{
				if ((this._UrlId != value))
				{
					this.OnUrlIdChanging(value);
					this.SendPropertyChanging();
					this._UrlId = value;
					this.SendPropertyChanged("UrlId");
					this.OnUrlIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchSkip", DbType="NVarChar(500)")]
		public string SearchSkip
		{
			get
			{
				return this._SearchSkip;
			}
			set
			{
				if ((this._SearchSkip != value))
				{
					this.OnSearchSkipChanging(value);
					this.SendPropertyChanging();
					this._SearchSkip = value;
					this.SendPropertyChanged("SearchSkip");
					this.OnSearchSkipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchBegin", DbType="NVarChar(500)")]
		public string SearchBegin
		{
			get
			{
				return this._SearchBegin;
			}
			set
			{
				if ((this._SearchBegin != value))
				{
					this.OnSearchBeginChanging(value);
					this.SendPropertyChanging();
					this._SearchBegin = value;
					this.SendPropertyChanged("SearchBegin");
					this.OnSearchBeginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SearchEnd", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string SearchEnd
		{
			get
			{
				return this._SearchEnd;
			}
			set
			{
				if ((this._SearchEnd != value))
				{
					this.OnSearchEndChanging(value);
					this.SendPropertyChanging();
					this._SearchEnd = value;
					this.SendPropertyChanged("SearchEnd");
					this.OnSearchEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldNum", DbType="Int")]
		public System.Nullable<int> FieldNum
		{
			get
			{
				return this._FieldNum;
			}
			set
			{
				if ((this._FieldNum != value))
				{
					this.OnFieldNumChanging(value);
					this.SendPropertyChanging();
					this._FieldNum = value;
					this.SendPropertyChanged("FieldNum");
					this.OnFieldNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FieldOrder", DbType="Int")]
		public System.Nullable<int> FieldOrder
		{
			get
			{
				return this._FieldOrder;
			}
			set
			{
				if ((this._FieldOrder != value))
				{
					this.OnFieldOrderChanging(value);
					this.SendPropertyChanging();
					this._FieldOrder = value;
					this.SendPropertyChanged("FieldOrder");
					this.OnFieldOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataType", DbType="NVarChar(50)")]
		public string DataType
		{
			get
			{
				return this._DataType;
			}
			set
			{
				if ((this._DataType != value))
				{
					this.OnDataTypeChanging(value);
					this.SendPropertyChanging();
					this._DataType = value;
					this.SendPropertyChanged("DataType");
					this.OnDataTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DefGroup", DbType="Int")]
		public System.Nullable<int> DefGroup
		{
			get
			{
				return this._DefGroup;
			}
			set
			{
				if ((this._DefGroup != value))
				{
					this.OnDefGroupChanging(value);
					this.SendPropertyChanging();
					this._DefGroup = value;
					this.SendPropertyChanged("DefGroup");
					this.OnDefGroupChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Definition")]
	public partial class Definition : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _CodeNum;
		
		private string _Definition1;
		
		private System.Nullable<int> _GroupId;
		
		private string _Description;
		
		private System.Nullable<bool> _Bit;
		
		private System.Nullable<int> _UserId;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _Num1;
		
		private System.Nullable<int> _Num2;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnCodeNumChanging(string value);
    partial void OnCodeNumChanged();
    partial void OnDefinition1Changing(string value);
    partial void OnDefinition1Changed();
    partial void OnGroupIdChanging(System.Nullable<int> value);
    partial void OnGroupIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnBitChanging(System.Nullable<bool> value);
    partial void OnBitChanged();
    partial void OnUserIdChanging(System.Nullable<int> value);
    partial void OnUserIdChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnNum1Changing(System.Nullable<int> value);
    partial void OnNum1Changed();
    partial void OnNum2Changing(System.Nullable<int> value);
    partial void OnNum2Changed();
    #endregion
		
		public Definition()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CodeNum", DbType="NVarChar(100)")]
		public string CodeNum
		{
			get
			{
				return this._CodeNum;
			}
			set
			{
				if ((this._CodeNum != value))
				{
					this.OnCodeNumChanging(value);
					this.SendPropertyChanging();
					this._CodeNum = value;
					this.SendPropertyChanged("CodeNum");
					this.OnCodeNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Definition", Storage="_Definition1", DbType="NVarChar(100)")]
		public string Definition1
		{
			get
			{
				return this._Definition1;
			}
			set
			{
				if ((this._Definition1 != value))
				{
					this.OnDefinition1Changing(value);
					this.SendPropertyChanging();
					this._Definition1 = value;
					this.SendPropertyChanged("Definition1");
					this.OnDefinition1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupId", DbType="Int")]
		public System.Nullable<int> GroupId
		{
			get
			{
				return this._GroupId;
			}
			set
			{
				if ((this._GroupId != value))
				{
					this.OnGroupIdChanging(value);
					this.SendPropertyChanging();
					this._GroupId = value;
					this.SendPropertyChanged("GroupId");
					this.OnGroupIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(1000)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bit", DbType="Bit")]
		public System.Nullable<bool> Bit
		{
			get
			{
				return this._Bit;
			}
			set
			{
				if ((this._Bit != value))
				{
					this.OnBitChanging(value);
					this.SendPropertyChanging();
					this._Bit = value;
					this.SendPropertyChanged("Bit");
					this.OnBitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="Int")]
		public System.Nullable<int> UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num1", DbType="Int")]
		public System.Nullable<int> Num1
		{
			get
			{
				return this._Num1;
			}
			set
			{
				if ((this._Num1 != value))
				{
					this.OnNum1Changing(value);
					this.SendPropertyChanging();
					this._Num1 = value;
					this.SendPropertyChanged("Num1");
					this.OnNum1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Num2", DbType="Int")]
		public System.Nullable<int> Num2
		{
			get
			{
				return this._Num2;
			}
			set
			{
				if ((this._Num2 != value))
				{
					this.OnNum2Changing(value);
					this.SendPropertyChanging();
					this._Num2 = value;
					this.SendPropertyChanged("Num2");
					this.OnNum2Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DefinitionGroup")]
	public partial class DefinitionGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Group;
		
		private string _Description;
		
		private System.Nullable<int> _First;
		
		private System.Nullable<int> _Last;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGroupChanging(string value);
    partial void OnGroupChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnFirstChanging(System.Nullable<int> value);
    partial void OnFirstChanged();
    partial void OnLastChanging(System.Nullable<int> value);
    partial void OnLastChanged();
    #endregion
		
		public DefinitionGroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Group]", Storage="_Group", DbType="NVarChar(50)")]
		public string Group
		{
			get
			{
				return this._Group;
			}
			set
			{
				if ((this._Group != value))
				{
					this.OnGroupChanging(value);
					this.SendPropertyChanging();
					this._Group = value;
					this.SendPropertyChanged("Group");
					this.OnGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(200)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First", DbType="Int")]
		public System.Nullable<int> First
		{
			get
			{
				return this._First;
			}
			set
			{
				if ((this._First != value))
				{
					this.OnFirstChanging(value);
					this.SendPropertyChanging();
					this._First = value;
					this.SendPropertyChanged("First");
					this.OnFirstChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last", DbType="Int")]
		public System.Nullable<int> Last
		{
			get
			{
				return this._Last;
			}
			set
			{
				if ((this._Last != value))
				{
					this.OnLastChanging(value);
					this.SendPropertyChanging();
					this._Last = value;
					this.SendPropertyChanged("Last");
					this.OnLastChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MergeTable")]
	public partial class MergeTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TableName;
		
		private string _MergeQuery;
		
		private System.Nullable<int> _DatabaseId;
		
		private string _ConnectionString;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnMergeQueryChanging(string value);
    partial void OnMergeQueryChanged();
    partial void OnDatabaseIdChanging(System.Nullable<int> value);
    partial void OnDatabaseIdChanged();
    partial void OnConnectionStringChanging(string value);
    partial void OnConnectionStringChanged();
    #endregion
		
		public MergeTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(500)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MergeQuery", DbType="NVarChar(MAX)")]
		public string MergeQuery
		{
			get
			{
				return this._MergeQuery;
			}
			set
			{
				if ((this._MergeQuery != value))
				{
					this.OnMergeQueryChanging(value);
					this.SendPropertyChanging();
					this._MergeQuery = value;
					this.SendPropertyChanged("MergeQuery");
					this.OnMergeQueryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DatabaseId", DbType="Int")]
		public System.Nullable<int> DatabaseId
		{
			get
			{
				return this._DatabaseId;
			}
			set
			{
				if ((this._DatabaseId != value))
				{
					this.OnDatabaseIdChanging(value);
					this.SendPropertyChanging();
					this._DatabaseId = value;
					this.SendPropertyChanged("DatabaseId");
					this.OnDatabaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConnectionString", DbType="NVarChar(500)")]
		public string ConnectionString
		{
			get
			{
				return this._ConnectionString;
			}
			set
			{
				if ((this._ConnectionString != value))
				{
					this.OnConnectionStringChanging(value);
					this.SendPropertyChanging();
					this._ConnectionString = value;
					this.SendPropertyChanged("ConnectionString");
					this.OnConnectionStringChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TableRequest")]
	public partial class TableRequest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _DBName;
		
		private string _TableName;
		
		private System.Nullable<bool> _IsDaily;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnDBNameChanging(string value);
    partial void OnDBNameChanged();
    partial void OnTableNameChanging(string value);
    partial void OnTableNameChanged();
    partial void OnIsDailyChanging(System.Nullable<bool> value);
    partial void OnIsDailyChanged();
    #endregion
		
		public TableRequest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DBName", DbType="NVarChar(50)")]
		public string DBName
		{
			get
			{
				return this._DBName;
			}
			set
			{
				if ((this._DBName != value))
				{
					this.OnDBNameChanging(value);
					this.SendPropertyChanging();
					this._DBName = value;
					this.SendPropertyChanged("DBName");
					this.OnDBNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableName", DbType="NVarChar(50)")]
		public string TableName
		{
			get
			{
				return this._TableName;
			}
			set
			{
				if ((this._TableName != value))
				{
					this.OnTableNameChanging(value);
					this.SendPropertyChanging();
					this._TableName = value;
					this.SendPropertyChanged("TableName");
					this.OnTableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDaily", DbType="Bit")]
		public System.Nullable<bool> IsDaily
		{
			get
			{
				return this._IsDaily;
			}
			set
			{
				if ((this._IsDaily != value))
				{
					this.OnIsDailyChanging(value);
					this.SendPropertyChanging();
					this._IsDaily = value;
					this.SendPropertyChanged("IsDaily");
					this.OnIsDailyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Url")]
	public partial class Url : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private System.Nullable<int> _TableId;
		
		private string _Url1;
		
		private System.Nullable<int> _ValueFrom;
		
		private System.Nullable<int> _ValueTo;
		
		private string _AlphaFrom;
		
		private string _AlphaTo;
		
		private System.Nullable<bool> _Loop;
		
		private System.Nullable<bool> _Google;
		
		private string _Search;
		
		private string _Param;
		
		private System.Nullable<System.DateTime> _FromDate;
		
		private string _StorePath;
		
		private System.Nullable<bool> _HttpPost;
		
		private System.Nullable<int> _ContentTypeId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTableIdChanging(System.Nullable<int> value);
    partial void OnTableIdChanged();
    partial void OnUrl1Changing(string value);
    partial void OnUrl1Changed();
    partial void OnValueFromChanging(System.Nullable<int> value);
    partial void OnValueFromChanged();
    partial void OnValueToChanging(System.Nullable<int> value);
    partial void OnValueToChanged();
    partial void OnAlphaFromChanging(string value);
    partial void OnAlphaFromChanged();
    partial void OnAlphaToChanging(string value);
    partial void OnAlphaToChanged();
    partial void OnLoopChanging(System.Nullable<bool> value);
    partial void OnLoopChanged();
    partial void OnGoogleChanging(System.Nullable<bool> value);
    partial void OnGoogleChanged();
    partial void OnSearchChanging(string value);
    partial void OnSearchChanged();
    partial void OnParamChanging(string value);
    partial void OnParamChanged();
    partial void OnFromDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFromDateChanged();
    partial void OnStorePathChanging(string value);
    partial void OnStorePathChanged();
    partial void OnHttpPostChanging(System.Nullable<bool> value);
    partial void OnHttpPostChanged();
    partial void OnContentTypeIdChanging(System.Nullable<int> value);
    partial void OnContentTypeIdChanged();
    #endregion
		
		public Url()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TableId", DbType="Int")]
		public System.Nullable<int> TableId
		{
			get
			{
				return this._TableId;
			}
			set
			{
				if ((this._TableId != value))
				{
					this.OnTableIdChanging(value);
					this.SendPropertyChanging();
					this._TableId = value;
					this.SendPropertyChanged("TableId");
					this.OnTableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Url", Storage="_Url1", DbType="NVarChar(500)")]
		public string Url1
		{
			get
			{
				return this._Url1;
			}
			set
			{
				if ((this._Url1 != value))
				{
					this.OnUrl1Changing(value);
					this.SendPropertyChanging();
					this._Url1 = value;
					this.SendPropertyChanged("Url1");
					this.OnUrl1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueFrom", DbType="Int")]
		public System.Nullable<int> ValueFrom
		{
			get
			{
				return this._ValueFrom;
			}
			set
			{
				if ((this._ValueFrom != value))
				{
					this.OnValueFromChanging(value);
					this.SendPropertyChanging();
					this._ValueFrom = value;
					this.SendPropertyChanged("ValueFrom");
					this.OnValueFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValueTo", DbType="Int")]
		public System.Nullable<int> ValueTo
		{
			get
			{
				return this._ValueTo;
			}
			set
			{
				if ((this._ValueTo != value))
				{
					this.OnValueToChanging(value);
					this.SendPropertyChanging();
					this._ValueTo = value;
					this.SendPropertyChanged("ValueTo");
					this.OnValueToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlphaFrom", DbType="NVarChar(2)")]
		public string AlphaFrom
		{
			get
			{
				return this._AlphaFrom;
			}
			set
			{
				if ((this._AlphaFrom != value))
				{
					this.OnAlphaFromChanging(value);
					this.SendPropertyChanging();
					this._AlphaFrom = value;
					this.SendPropertyChanged("AlphaFrom");
					this.OnAlphaFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlphaTo", DbType="NVarChar(2)")]
		public string AlphaTo
		{
			get
			{
				return this._AlphaTo;
			}
			set
			{
				if ((this._AlphaTo != value))
				{
					this.OnAlphaToChanging(value);
					this.SendPropertyChanging();
					this._AlphaTo = value;
					this.SendPropertyChanged("AlphaTo");
					this.OnAlphaToChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Loop", DbType="Bit")]
		public System.Nullable<bool> Loop
		{
			get
			{
				return this._Loop;
			}
			set
			{
				if ((this._Loop != value))
				{
					this.OnLoopChanging(value);
					this.SendPropertyChanging();
					this._Loop = value;
					this.SendPropertyChanged("Loop");
					this.OnLoopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Google", DbType="Bit")]
		public System.Nullable<bool> Google
		{
			get
			{
				return this._Google;
			}
			set
			{
				if ((this._Google != value))
				{
					this.OnGoogleChanging(value);
					this.SendPropertyChanging();
					this._Google = value;
					this.SendPropertyChanged("Google");
					this.OnGoogleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Search", DbType="NVarChar(500)")]
		public string Search
		{
			get
			{
				return this._Search;
			}
			set
			{
				if ((this._Search != value))
				{
					this.OnSearchChanging(value);
					this.SendPropertyChanging();
					this._Search = value;
					this.SendPropertyChanged("Search");
					this.OnSearchChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Param", DbType="NVarChar(500)")]
		public string Param
		{
			get
			{
				return this._Param;
			}
			set
			{
				if ((this._Param != value))
				{
					this.OnParamChanging(value);
					this.SendPropertyChanging();
					this._Param = value;
					this.SendPropertyChanged("Param");
					this.OnParamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FromDate", DbType="Date")]
		public System.Nullable<System.DateTime> FromDate
		{
			get
			{
				return this._FromDate;
			}
			set
			{
				if ((this._FromDate != value))
				{
					this.OnFromDateChanging(value);
					this.SendPropertyChanging();
					this._FromDate = value;
					this.SendPropertyChanged("FromDate");
					this.OnFromDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StorePath", DbType="NVarChar(MAX)")]
		public string StorePath
		{
			get
			{
				return this._StorePath;
			}
			set
			{
				if ((this._StorePath != value))
				{
					this.OnStorePathChanging(value);
					this.SendPropertyChanging();
					this._StorePath = value;
					this.SendPropertyChanged("StorePath");
					this.OnStorePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HttpPost", DbType="Bit")]
		public System.Nullable<bool> HttpPost
		{
			get
			{
				return this._HttpPost;
			}
			set
			{
				if ((this._HttpPost != value))
				{
					this.OnHttpPostChanging(value);
					this.SendPropertyChanging();
					this._HttpPost = value;
					this.SendPropertyChanged("HttpPost");
					this.OnHttpPostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ContentTypeId", DbType="Int")]
		public System.Nullable<int> ContentTypeId
		{
			get
			{
				return this._ContentTypeId;
			}
			set
			{
				if ((this._ContentTypeId != value))
				{
					this.OnContentTypeIdChanging(value);
					this.SendPropertyChanging();
					this._ContentTypeId = value;
					this.SendPropertyChanged("ContentTypeId");
					this.OnContentTypeIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServerName")]
	public partial class ServerName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _ServerSource;
		
		private string _ServerDest;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnServerSourceChanging(string value);
    partial void OnServerSourceChanged();
    partial void OnServerDestChanging(string value);
    partial void OnServerDestChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
		
		public ServerName()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerSource", DbType="NVarChar(500)")]
		public string ServerSource
		{
			get
			{
				return this._ServerSource;
			}
			set
			{
				if ((this._ServerSource != value))
				{
					this.OnServerSourceChanging(value);
					this.SendPropertyChanging();
					this._ServerSource = value;
					this.SendPropertyChanged("ServerSource");
					this.OnServerSourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerDest", DbType="NVarChar(500)")]
		public string ServerDest
		{
			get
			{
				return this._ServerDest;
			}
			set
			{
				if ((this._ServerDest != value))
				{
					this.OnServerDestChanging(value);
					this.SendPropertyChanging();
					this._ServerDest = value;
					this.SendPropertyChanged("ServerDest");
					this.OnServerDestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
